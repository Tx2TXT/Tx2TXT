digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x60\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = CALLDATASIZE()\l6: %03 = ISZERO(%02)\l7: %04 = #0x4A\la: JUMPI(%04, %03)\l"]
		block_b [label="b: %05 = #0x0\ld: %06 = CALLDATALOAD(%05)\le: %07 = #0x100000000000000000000000000000000000000000000000000000000\l2c: SWAP1(%06)\l2d: %08 = DIV(%06, %07)\l2e: %09 = #0xFFFFFFFF\l33: %0A = AND(%09, %08)\l34: %0B = DUP1(%0A)\l35: %0C = #0xC8FEA2FB\l3a: %0D = EQ(%0C, %0A)\l3b: %0E = #0x4E\l3e: JUMPI(%0E, %0D)\l"]
		block_3f [label="3f: %0F = DUP1(%0A)\l40: %10 = #0xFF03AD56\l45: %11 = EQ(%10, %0A)\l46: %12 = #0xAF\l49: JUMPI(%12, %11)\l"]
		block_4a [label="4a: JUMPDEST()\l"]
		block_4b [label="4b: JUMPDEST()\l"]
		block_4c [label="4c: JUMPDEST()\l4d: STOP()\l"]
		block_4e [label="4e: JUMPDEST()\l4f: %54 = CALLVALUE()\l50: %55 = ISZERO(%54)\l51: %56 = #0x59\l54: JUMPI(%56, %55)\l"]
		block_55 [label="55: %57 = #0x0\l57: %58 = DUP1(%57)\l58: REVERT(%57, %57)\l"]
		block_59 [label="59: JUMPDEST()\l5a: %59 = #0xAD\l5d: %5A = #0x4\l5f: %5B = DUP1(%5A)\l60: %5C = DUP1(%5A)\l61: %5D = CALLDATALOAD(%5A)\l62: %5E = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l77: %5F = AND(%5E, %5D)\l78: SWAP1(%5A)\l79: %60 = #0x20\l7b: %61 = ADD(%60, %5A)\l7c: SWAP1(%5F)\l7d: SWAP2(%5A)\l7e: SWAP1(%61)\l7f: %62 = DUP1(%61)\l80: %63 = CALLDATALOAD(%61)\l81: %64 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l96: %65 = AND(%64, %63)\l97: SWAP1(%61)\l98: %66 = #0x20\l9a: %67 = ADD(%66, %61)\l9b: SWAP1(%65)\l9c: SWAP2(%5A)\l9d: SWAP1(%67)\l9e: %68 = DUP1(%67)\l9f: %69 = CALLDATALOAD(%67)\la0: SWAP1(%67)\la1: %6A = #0x20\la3: %6B = ADD(%6A, %67)\la4: SWAP1(%69)\la5: SWAP2(%5A)\la6: SWAP1(%6B)\la7: POP()\la8: POP()\la9: %6C = #0xE6\lac: JUMP(%6C)\l"]
		block_ad [label="ad: JUMPDEST()\lae: STOP()\l"]
		block_af [label="af: JUMPDEST()\lb0: %13 = #0xE4\lb3: %14 = #0x4\lb5: %15 = DUP1(%14)\lb6: %16 = DUP1(%14)\lb7: %17 = CALLDATALOAD(%14)\lb8: %18 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\lcd: %19 = AND(%18, %17)\lce: SWAP1(%14)\lcf: %1A = #0x20\ld1: %1B = ADD(%1A, %14)\ld2: SWAP1(%19)\ld3: SWAP2(%14)\ld4: SWAP1(%1B)\ld5: %1C = DUP1(%1B)\ld6: %1D = CALLDATALOAD(%1B)\ld7: SWAP1(%1B)\ld8: %1E = #0x20\lda: %1F = ADD(%1E, %1B)\ldb: SWAP1(%1D)\ldc: SWAP2(%14)\ldd: SWAP1(%1F)\lde: POP()\ldf: POP()\le0: %20 = #0x210\le3: JUMP(%20)\l"]
		block_e4 [label="e4: JUMPDEST()\le5: STOP()\l"]
		block_e6 [label="e6: JUMPDEST()\le7: %6D = #0x0\le9: %6E = DUP1(%6D)\lea: %6F = #0x0\lec: SWAP1(%6D)\led: %70 = SLOAD(%6D)\lee: SWAP1(%6F)\lef: %71 = #0x100\lf2: %72 = EXP(%71, %6F)\lf3: SWAP1(%70)\lf4: %73 = DIV(%70, %72)\lf5: %74 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l10a: %75 = AND(%74, %73)\l10b: %76 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l120: %77 = AND(%76, %75)\l121: %78 = CALLER()\l122: %79 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l137: %7A = AND(%79, %78)\l138: %7B = EQ(%7A, %77)\l139: %7C = ISZERO(%7B)\l13a: %7D = #0x209\l13d: JUMPI(%7D, %7C)\l"]
		block_13e [label="13e: %7E = DUP3(%65)\l13f: SWAP1(%6D)\l140: POP()\l141: %7F = DUP1(%65)\l142: %80 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l157: %81 = AND(%80, %65)\l158: %82 = #0xA9059CBB\l15d: %83 = DUP6(%5F)\l15e: %84 = DUP5(%69)\l15f: %85 = #0x0\l161: %86 = #0x40\l163: %87 = MLOAD(%86)\l164: %88 = #0x20\l166: %89 = ADD(%88, %87)\l167: MSTORE(%89, %85)\l168: %8A = #0x40\l16a: %8B = MLOAD(%8A)\l16b: %8C = DUP4(%82)\l16c: %8D = #0xFFFFFFFF\l171: %8E = AND(%8D, %82)\l172: %8F = #0x100000000000000000000000000000000000000000000000000000000\l190: %90 = MUL(%8F, %8E)\l191: %91 = DUP2(%8B)\l192: MSTORE(%8B, %90)\l193: %92 = #0x4\l195: %93 = ADD(%92, %8B)\l196: %94 = DUP1(%93)\l197: %95 = DUP4(%5F)\l198: %96 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1ad: %97 = AND(%96, %5F)\l1ae: %98 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1c3: %99 = AND(%98, %97)\l1c4: %9A = DUP2(%93)\l1c5: MSTORE(%93, %99)\l1c6: %9B = #0x20\l1c8: %9C = ADD(%9B, %93)\l1c9: %9D = DUP3(%69)\l1ca: %9E = DUP2(%9C)\l1cb: MSTORE(%9C, %69)\l1cc: %9F = #0x20\l1ce: %A0 = ADD(%9F, %9C)\l1cf: SWAP3(%5F)\l1d0: POP()\l1d1: POP()\l1d2: POP()\l1d3: %A1 = #0x20\l1d5: %A2 = #0x40\l1d7: %A3 = MLOAD(%A2)\l1d8: %A4 = DUP1(%A3)\l1d9: %A5 = DUP4(%A0)\l1da: %A6 = SUB(%A0, %A3)\l1db: %A7 = DUP2(%A3)\l1dc: %A8 = #0x0\l1de: %A9 = DUP8(%81)\l1df: %AA = DUP1(%81)\l1e0: %AB = EXTCODESIZE(%81)\l1e1: %AC = ISZERO(%AB)\l1e2: %AD = ISZERO(%AC)\l1e3: %AE = #0x1EB\l1e6: JUMPI(%AE, %AD)\l"]
		block_1e7 [label="1e7: %AF = #0x0\l1e9: %B0 = DUP1(%AF)\l1ea: REVERT(%AF, %AF)\l"]
		block_1eb [label="1eb: JUMPDEST()\l1ec: %B1 = #0x2C6\l1ef: %B2 = GAS()\l1f0: %B3 = SUB(%B2, %B1)\l1f1: %B4 = CALL(%B3, %81, %A8, %A3, %A6, %A3, %A1)\l1f2: %B5 = ISZERO(%B4)\l1f3: %B6 = ISZERO(%B5)\l1f4: %B7 = #0x1FC\l1f7: JUMPI(%B7, %B6)\l"]
		block_1f8 [label="1f8: %B8 = #0x0\l1fa: %B9 = DUP1(%B8)\l1fb: REVERT(%B8, %B8)\l"]
		block_1fc [label="1fc: JUMPDEST()\l1fd: POP()\l1fe: POP()\l1ff: POP()\l200: %BA = #0x40\l202: %BB = MLOAD(%BA)\l203: %BC = DUP1(%BB)\l204: %BD = MLOAD(%BB)\l205: SWAP1(%BB)\l206: POP()\l207: POP()\l"]
		block_208 [label="208: JUMPDEST()\l"]
		block_209 [label="209: JUMPDEST()\l"]
		block_20a [label="20a: JUMPDEST()\l20b: POP()\l20c: POP()\l20d: POP()\l20e: POP()\l20f: JUMP(%59)\l"]
		block_210 [label="210: JUMPDEST()\l211: %21 = #0x0\l213: %22 = DUP1(%21)\l214: SWAP1(%21)\l215: %23 = SLOAD(%21)\l216: SWAP1(%21)\l217: %24 = #0x100\l21a: %25 = EXP(%24, %21)\l21b: SWAP1(%23)\l21c: %26 = DIV(%23, %25)\l21d: %27 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l232: %28 = AND(%27, %26)\l233: %29 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l248: %2A = AND(%29, %28)\l249: %2B = CALLER()\l24a: %2C = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l25f: %2D = AND(%2C, %2B)\l260: %2E = EQ(%2D, %2A)\l261: %2F = ISZERO(%2E)\l262: %30 = #0x2C8\l265: JUMPI(%30, %2F)\l"]
		block_266 [label="266: %31 = DUP1(%1D)\l267: %32 = CALLER()\l268: %33 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l27d: %34 = AND(%33, %32)\l27e: %35 = BALANCE(%34)\l27f: %36 = LT(%35, %1D)\l280: %37 = ISZERO(%36)\l281: %38 = ISZERO(%37)\l282: %39 = #0x2C6\l285: JUMPI(%39, %38)\l"]
		block_286 [label="286: %3A = DUP2(%19)\l287: %3B = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l29c: %3C = AND(%3B, %19)\l29d: %3D = #0x8FC\l2a0: %3E = DUP3(%1D)\l2a1: SWAP1(%3D)\l2a2: %3F = DUP2(%1D)\l2a3: %40 = ISZERO(%1D)\l2a4: %41 = MUL(%40, %3D)\l2a5: SWAP1(%1D)\l2a6: %42 = #0x40\l2a8: %43 = MLOAD(%42)\l2a9: %44 = #0x0\l2ab: %45 = #0x40\l2ad: %46 = MLOAD(%45)\l2ae: %47 = DUP1(%46)\l2af: %48 = DUP4(%43)\l2b0: %49 = SUB(%43, %46)\l2b1: %4A = DUP2(%46)\l2b2: %4B = DUP6(%1D)\l2b3: %4C = DUP9(%3C)\l2b4: %4D = DUP9(%41)\l2b5: %4E = CALL(%41, %3C, %1D, %46, %49, %46, %44)\l2b6: SWAP4(%3C)\l2b7: POP()\l2b8: POP()\l2b9: POP()\l2ba: POP()\l2bb: %4F = ISZERO(%4E)\l2bc: %50 = ISZERO(%4F)\l2bd: %51 = #0x2C5\l2c0: JUMPI(%51, %50)\l"]
		block_2c1 [label="2c1: %52 = #0x0\l2c3: %53 = DUP1(%52)\l2c4: REVERT(%52, %52)\l"]
		block_2c5 [label="2c5: JUMPDEST()\l"]
		block_2c6 [label="2c6: JUMPDEST()\l"]
		block_2c7 [label="2c7: JUMPDEST()\l"]
		block_2c8 [label="2c8: JUMPDEST()\l"]
		block_2c9 [label="2c9: JUMPDEST()\l2ca: POP()\l2cb: POP()\l2cc: JUMP(%13)\l"]
		block_2cd [label="2cd: [NO_SSA] STOP\l"]
	}
	block_2c6 -> block_2c7 [color=cyan]
	block_286 -> block_2c1 [color=red]
	block_286 -> block_2c5 [color=green]
	block_2c9 -> block_e4 [color=blue]
	block_3f -> block_af [color=green]
	block_3f -> block_4a [color=red]
	block_4b -> block_4c [color=cyan]
	block_e6 -> block_13e [color=red]
	block_266 -> block_286 [color=red]
	block_2c7 -> block_2c8 [color=cyan]
	block_1eb -> block_1fc [color=green]
	block_4e -> block_55 [color=red]
	block_1fc -> block_208 [color=cyan]
	block_4a -> block_4b [color=cyan]
	block_0 -> block_4a [color=green]
	block_208 -> block_209 [color=cyan]
	block_b -> block_3f [color=red]
	block_266 -> block_2c6 [color=green]
	block_2c8 -> block_2c9 [color=cyan]
	block_0 -> block_b [color=red]
	block_210 -> block_266 [color=red]
	block_20a -> block_ad [color=blue]
	block_13e -> block_1e7 [color=red]
	block_4e -> block_59 [color=green]
	block_59 -> block_e6 [color=blue]
	block_13e -> block_1eb [color=green]
	block_1eb -> block_1f8 [color=red]
	block_210 -> block_2c8 [color=green]
	block_e6 -> block_209 [color=green]
	block_af -> block_210 [color=blue]
	block_2c5 -> block_2c6 [color=cyan]
	block_b -> block_4e [color=green]
	block_209 -> block_20a [color=cyan]
}
