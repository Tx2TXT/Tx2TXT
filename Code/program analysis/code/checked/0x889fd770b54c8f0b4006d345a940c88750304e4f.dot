digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x80\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = #0x4\l7: %03 = CALLDATASIZE()\l8: %04 = LT(%03, %02)\l9: %05 = #0x56\lc: JUMPI(%05, %04)\l"]
		block_d [label="d: %06 = #0xFFFFFFFF\l12: %07 = #0x100000000000000000000000000000000000000000000000000000000\l30: %08 = #0x0\l32: %09 = CALLDATALOAD(%08)\l33: %0A = DIV(%09, %07)\l34: %0B = AND(%0A, %06)\l35: %0C = #0x8DA5CB5B\l3a: %0D = DUP2(%0B)\l3b: %0E = EQ(%0B, %0C)\l3c: %0F = #0xCD\l3f: JUMPI(%0F, %0E)\l"]
		block_40 [label="40: %10 = DUP1(%0B)\l41: %11 = #0xB76EA962\l46: %12 = EQ(%11, %0B)\l47: %13 = #0xFE\l4a: JUMPI(%13, %12)\l"]
		block_4b [label="4b: %14 = DUP1(%0B)\l4c: %15 = #0xF2FDE38B\l51: %16 = EQ(%15, %0B)\l52: %17 = #0x158\l55: JUMPI(%17, %16)\l"]
		block_56 [label="56: JUMPDEST()\l57: %143 = #0x0\l59: %144 = DUP1(%143)\l5a: %145 = SLOAD(%143)\l5b: %146 = #0x40\l5d: %147 = MLOAD(%146)\l5e: %148 = #0x1\l60: %149 = #0xA0\l62: %14A = #0x2\l64: %14B = EXP(%14A, %149)\l65: %14C = SUB(%14B, %148)\l66: SWAP1(%147)\l67: SWAP2(%145)\l68: %14D = AND(%145, %14C)\l69: SWAP2(%143)\l6a: %14E = CALLVALUE()\l6b: SWAP2(%147)\l6c: SWAP1(%143)\l6d: %14F = DUP2(%147)\l6e: %150 = DUP2(%143)\l6f: %151 = DUP2(%147)\l70: %152 = DUP6(%14E)\l71: %153 = DUP8(%14D)\l72: %154 = GAS()\l73: %155 = CALL(%154, %14D, %14E, %147, %143, %147, %143)\l74: SWAP3(%14D)\l75: POP()\l76: POP()\l77: POP()\l78: %156 = ISZERO(%155)\l79: %157 = #0xC6\l7c: JUMPI(%157, %156)\l"]
		block_7d [label="7d: %158 = #0x0\l7f: %159 = SLOAD(%158)\l80: %15A = #0x40\l82: %15B = DUP1(%15A)\l83: %15C = MLOAD(%15A)\l84: %15D = CALLVALUE()\l85: %15E = DUP2(%15C)\l86: MSTORE(%15C, %15D)\l87: SWAP1(%15A)\l88: %15F = MLOAD(%15A)\l89: %160 = #0x1\l8b: %161 = #0xA0\l8d: %162 = #0x2\l8f: %163 = EXP(%162, %161)\l90: %164 = SUB(%163, %160)\l91: SWAP1(%15F)\l92: SWAP3(%159)\l93: %165 = AND(%159, %164)\l94: SWAP2(%15F)\l95: %166 = CALLER()\l96: SWAP2(%15C)\l97: %167 = #0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62\lb8: SWAP2(%15F)\lb9: SWAP1(%15C)\lba: %168 = DUP2(%15F)\lbb: SWAP1(%15C)\lbc: %169 = SUB(%15C, %15F)\lbd: %16A = #0x20\lbf: %16B = ADD(%16A, %169)\lc0: SWAP1(%15F)\lc1: LOG3(%15F, %16B, %167, %166, %165)\lc2: %16C = #0xCB\lc5: JUMP(%16C)\l"]
		block_c6 [label="c6: JUMPDEST()\lc7: %16D = #0x0\lc9: %16E = DUP1(%16D)\lca: REVERT(%16D, %16D)\l"]
		block_cb [label="cb: JUMPDEST()\lcc: STOP()\l"]
		block_cd [label="cd: JUMPDEST()\lce: %123 = CALLVALUE()\lcf: %124 = DUP1(%123)\ld0: %125 = ISZERO(%123)\ld1: %126 = #0xD9\ld4: JUMPI(%126, %125)\l"]
		block_d5 [label="d5: %127 = #0x0\ld7: %128 = DUP1(%127)\ld8: REVERT(%127, %127)\l"]
		block_d9 [label="d9: JUMPDEST()\lda: POP()\ldb: %129 = #0xE2\lde: %12A = #0x179\le1: JUMP(%12A)\l"]
		block_e2 [label="e2: JUMPDEST()\le3: %134 = #0x40\le5: %135 = DUP1(%134)\le6: %136 = MLOAD(%134)\le7: %137 = #0x1\le9: %138 = #0xA0\leb: %139 = #0x2\led: %13A = EXP(%139, %138)\lee: %13B = SUB(%13A, %137)\lef: SWAP1(%136)\lf0: SWAP3(%132)\lf1: %13C = AND(%132, %13B)\lf2: %13D = DUP3(%136)\lf3: MSTORE(%136, %13C)\lf4: %13E = MLOAD(%134)\lf5: SWAP1(%136)\lf6: %13F = DUP2(%13E)\lf7: SWAP1(%136)\lf8: %140 = SUB(%136, %13E)\lf9: %141 = #0x20\lfb: %142 = ADD(%141, %140)\lfc: SWAP1(%13E)\lfd: RETURN(%13E, %142)\l"]
		block_fe [label="fe: JUMPDEST()\lff: %8C = #0x40\l101: %8D = DUP1(%8C)\l102: %8E = MLOAD(%8C)\l103: %8F = #0x20\l105: %90 = #0x4\l107: %91 = #0x24\l109: %92 = DUP1(%91)\l10a: %93 = CALLDATALOAD(%91)\l10b: %94 = DUP3(%90)\l10c: %95 = DUP2(%93)\l10d: %96 = ADD(%93, %90)\l10e: %97 = CALLDATALOAD(%96)\l10f: %98 = #0x1F\l111: %99 = DUP2(%97)\l112: %9A = ADD(%97, %98)\l113: %9B = DUP6(%8F)\l114: SWAP1(%9A)\l115: %9C = DIV(%9A, %8F)\l116: %9D = DUP6(%8F)\l117: %9E = MUL(%8F, %9C)\l118: %9F = DUP7(%8E)\l119: %A0 = ADD(%8E, %9E)\l11a: %A1 = DUP6(%8F)\l11b: %A2 = ADD(%8F, %A0)\l11c: SWAP1(%97)\l11d: SWAP7(%8C)\l11e: MSTORE(%8C, %A2)\l11f: %A3 = DUP6(%97)\l120: %A4 = DUP6(%8E)\l121: MSTORE(%8E, %97)\l122: %A5 = #0xCB\l125: SWAP6(%97)\l126: %A6 = DUP4(%90)\l127: %A7 = CALLDATALOAD(%90)\l128: %A8 = #0x1\l12a: %A9 = #0xA0\l12c: %AA = #0x2\l12e: %AB = EXP(%AA, %A9)\l12f: %AC = SUB(%AB, %A8)\l130: %AD = AND(%AC, %A7)\l131: SWAP6(%8E)\l132: %AE = CALLDATASIZE()\l133: SWAP6(%8F)\l134: %AF = #0x44\l136: SWAP5(%91)\l137: SWAP2(%8E)\l138: SWAP4(%93)\l139: SWAP1(%8F)\l13a: SWAP2(%91)\l13b: %B0 = ADD(%91, %93)\l13c: SWAP2(%97)\l13d: SWAP1(%8F)\l13e: %B1 = DUP2(%97)\l13f: SWAP1(%8F)\l140: %B2 = DUP5(%8E)\l141: %B3 = ADD(%8E, %8F)\l142: %B4 = DUP4(%B0)\l143: %B5 = DUP3(%97)\l144: %B6 = DUP1(%97)\l145: %B7 = DUP3(%B0)\l146: %B8 = DUP5(%B3)\l147: CALLDATACOPY(%B3, %B0, %97)\l148: POP()\l149: SWAP5(%8E)\l14a: SWAP8(%AE)\l14b: POP()\l14c: %B9 = #0x188\l14f: SWAP7(%90)\l150: POP()\l151: POP()\l152: POP()\l153: POP()\l154: POP()\l155: POP()\l156: POP()\l157: JUMP(%B9)\l"]
		block_158 [label="158: JUMPDEST()\l159: %44 = CALLVALUE()\l15a: %45 = DUP1(%44)\l15b: %46 = ISZERO(%44)\l15c: %47 = #0x164\l15f: JUMPI(%47, %46)\l"]
		block_160 [label="160: %48 = #0x0\l162: %49 = DUP1(%48)\l163: REVERT(%48, %48)\l"]
		block_164 [label="164: JUMPDEST()\l165: POP()\l166: %4A = #0xCB\l169: %4B = #0x1\l16b: %4C = #0xA0\l16d: %4D = #0x2\l16f: %4E = EXP(%4D, %4C)\l170: %4F = SUB(%4E, %4B)\l171: %50 = #0x4\l173: %51 = CALLDATALOAD(%50)\l174: %52 = AND(%51, %4F)\l175: %53 = #0x226\l178: JUMP(%53)\l"]
		block_179 [label="179: JUMPDEST()\l17a: %12B = #0x0\l17c: %12C = SLOAD(%12B)\l17d: %12D = #0x1\l17f: %12E = #0xA0\l181: %12F = #0x2\l183: %130 = EXP(%12F, %12E)\l184: %131 = SUB(%130, %12D)\l185: %132 = AND(%131, %12C)\l186: %133 = DUP2(%129)\l187: JUMP(%129)\l"]
		block_188 [label="188: JUMPDEST()\l189: %BA = #0x0\l18b: %BB = SLOAD(%BA)\l18c: %BC = #0x1\l18e: %BD = #0xA0\l190: %BE = #0x2\l192: %BF = EXP(%BE, %BD)\l193: %C0 = SUB(%BF, %BC)\l194: %C1 = AND(%C0, %BB)\l195: %C2 = CALLER()\l196: %C3 = EQ(%C2, %C1)\l197: %C4 = #0x19F\l19a: JUMPI(%C4, %C3)\l"]
		block_19b [label="19b: %C5 = #0x0\l19d: %C6 = DUP1(%C5)\l19e: REVERT(%C5, %C5)\l"]
		block_19f [label="19f: JUMPDEST()\l1a0: %C7 = DUP2(%AD)\l1a1: %C8 = #0x1\l1a3: %C9 = #0xA0\l1a5: %CA = #0x2\l1a7: %CB = EXP(%CA, %C9)\l1a8: %CC = SUB(%CB, %C8)\l1a9: %CD = AND(%CC, %AD)\l1aa: %CE = CALLVALUE()\l1ab: %CF = DUP3(%8E)\l1ac: %D0 = #0x40\l1ae: %D1 = MLOAD(%D0)\l1af: %D2 = DUP1(%D1)\l1b0: %D3 = DUP3(%8E)\l1b1: %D4 = DUP1(%8E)\l1b2: %D5 = MLOAD(%8E)\l1b3: SWAP1(%8E)\l1b4: %D6 = #0x20\l1b6: %D7 = ADD(%D6, %8E)\l1b7: SWAP1(%D5)\l1b8: %D8 = DUP1(%D5)\l1b9: %D9 = DUP4(%D1)\l1ba: %DA = DUP4(%D7)\l1bb: %DB = #0x0\l"]
		block_1bd [label="1bd: JUMPDEST()\l1be: %DC = DUP4(%D5)\l1bf: %DD = DUP2(%DB)\l1c0: %DE = LT(%DB, %D5)\l1c1: %DF = ISZERO(%DE)\l1c2: %E0 = #0x1D5\l1c5: JUMPI(%E0, %DF)\l"]
		block_1c6 [label="1c6: %E1 = DUP2(%D7)\l1c7: %E2 = DUP2(%DB)\l1c8: %E3 = ADD(%DB, %D7)\l1c9: %E4 = MLOAD(%E3)\l1ca: %E5 = DUP4(%D1)\l1cb: %E6 = DUP3(%DB)\l1cc: %E7 = ADD(%DB, %D1)\l1cd: MSTORE(%E7, %E4)\l1ce: %E8 = #0x20\l1d0: %E9 = ADD(%E8, %DB)\l1d1: %EA = #0x1BD\l1d4: JUMP(%EA)\l"]
		block_1d5 [label="1d5: JUMPDEST()\l1d6: POP()\l1d7: POP()\l1d8: POP()\l1d9: POP()\l1da: SWAP1(%D7)\l1db: POP()\l1dc: SWAP1(%D1)\l1dd: %EB = DUP2(%D5)\l1de: %EC = ADD(%D5, %D1)\l1df: SWAP1(%D5)\l1e0: %ED = #0x1F\l1e2: %EE = AND(%ED, %D5)\l1e3: %EF = DUP1(%EE)\l1e4: %F0 = ISZERO(%EE)\l1e5: %F1 = #0x202\l1e8: JUMPI(%F1, %F0)\l"]
		block_1e9 [label="1e9: %F2 = DUP1(%EE)\l1ea: %F3 = DUP3(%EC)\l1eb: %F4 = SUB(%EC, %EE)\l1ec: %F5 = DUP1(%F4)\l1ed: %F6 = MLOAD(%F4)\l1ee: %F7 = #0x1\l1f0: %F8 = DUP4(%EE)\l1f1: %F9 = #0x20\l1f3: %FA = SUB(%F9, %EE)\l1f4: %FB = #0x100\l1f7: %FC = EXP(%FB, %FA)\l1f8: %FD = SUB(%FC, %F7)\l1f9: %FE = NOT(%FD)\l1fa: %FF = AND(%FE, %F6)\l1fb: %100 = DUP2(%F4)\l1fc: MSTORE(%F4, %FF)\l1fd: %101 = #0x20\l1ff: %102 = ADD(%101, %F4)\l200: SWAP2(%EC)\l201: POP()\l"]
		block_202 [label="202: JUMPDEST()\l203: POP()\l204: SWAP2(%8E)\l205: POP()\l206: POP()\l207: %113 = #0x0\l209: %114 = #0x40\l20b: %115 = MLOAD(%114)\l20c: %116 = DUP1(%115)\l20d: %117 = DUP4(%EC)\l20e: %118 = SUB(%EC, %115)\l20f: %119 = DUP2(%115)\l210: %11A = DUP6(%CE)\l211: %11B = DUP8(%CD)\l212: %11C = GAS()\l213: %11D = CALL(%11C, %CD, %CE, %115, %118, %115, %113)\l214: SWAP3(%CD)\l215: POP()\l216: POP()\l217: POP()\l218: %11E = ISZERO(%11D)\l219: %11F = ISZERO(%11E)\l21a: %120 = #0x222\l21d: JUMPI(%120, %11F)\l"]
		block_21e [label="21e: %121 = #0x0\l220: %122 = DUP1(%121)\l221: REVERT(%121, %121)\l"]
		block_222 [label="222: JUMPDEST()\l223: POP()\l224: POP()\l225: JUMP(%A5)\l"]
		block_226 [label="226: JUMPDEST()\l227: %54 = #0x0\l229: %55 = SLOAD(%54)\l22a: %56 = #0x1\l22c: %57 = #0xA0\l22e: %58 = #0x2\l230: %59 = EXP(%58, %57)\l231: %5A = SUB(%59, %56)\l232: %5B = AND(%5A, %55)\l233: %5C = CALLER()\l234: %5D = EQ(%5C, %5B)\l235: %5E = #0x23D\l238: JUMPI(%5E, %5D)\l"]
		block_239 [label="239: %5F = #0x0\l23b: %60 = DUP1(%5F)\l23c: REVERT(%5F, %5F)\l"]
		block_23d [label="23d: JUMPDEST()\l23e: %61 = #0x246\l241: %62 = DUP2(%52)\l242: %63 = #0x249\l245: JUMP(%63)\l"]
		block_246 [label="246: JUMPDEST()\l247: POP()\l248: JUMP(%4A)\l"]
		block_249 [label="249: JUMPDEST()\l24a: %64 = #0x1\l24c: %65 = #0xA0\l24e: %66 = #0x2\l250: %67 = EXP(%66, %65)\l251: %68 = SUB(%67, %64)\l252: %69 = DUP2(%52)\l253: %6A = AND(%52, %68)\l254: %6B = ISZERO(%6A)\l255: %6C = ISZERO(%6B)\l256: %6D = #0x25E\l259: JUMPI(%6D, %6C)\l"]
		block_25a [label="25a: %6E = #0x0\l25c: %6F = DUP1(%6E)\l25d: REVERT(%6E, %6E)\l"]
		block_25e [label="25e: JUMPDEST()\l25f: %70 = #0x0\l261: %71 = DUP1(%70)\l262: %72 = SLOAD(%70)\l263: %73 = #0x40\l265: %74 = MLOAD(%73)\l266: %75 = #0x1\l268: %76 = #0xA0\l26a: %77 = #0x2\l26c: %78 = EXP(%77, %76)\l26d: %79 = SUB(%78, %75)\l26e: %7A = DUP1(%79)\l26f: %7B = DUP6(%52)\l270: %7C = AND(%52, %79)\l271: SWAP4(%70)\l272: SWAP3(%72)\l273: %7D = AND(%72, %79)\l274: SWAP2(%70)\l275: %7E = #0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\l296: SWAP2(%74)\l297: LOG3(%74, %70, %7E, %7D, %7C)\l298: %7F = #0x0\l29a: %80 = DUP1(%7F)\l29b: %81 = SLOAD(%7F)\l29c: %82 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l2b1: %83 = NOT(%82)\l2b2: %84 = AND(%83, %81)\l2b3: %85 = #0x1\l2b5: %86 = #0xA0\l2b7: %87 = #0x2\l2b9: %88 = EXP(%87, %86)\l2ba: %89 = SUB(%88, %85)\l2bb: SWAP3(%52)\l2bc: SWAP1(%84)\l2bd: SWAP3(%89)\l2be: %8A = AND(%89, %52)\l2bf: SWAP2(%84)\l2c0: SWAP1(%7F)\l2c1: SWAP2(%8A)\l2c2: %8B = OR(%8A, %84)\l2c3: SWAP1(%7F)\l2c4: SSTORE(%7F, %8B)\l2c5: JUMP(%61)\l"]
		block_2c6 [label="2c6: [NO_SSA] STOP\l"]
	}
	block_1e9 -> block_202 [color=cyan]
	block_0 -> block_d [color=red]
	block_7d -> block_cb [color=blue]
	block_1bd -> block_1d5 [color=green]
	block_cd -> block_d9 [color=green]
	block_249 -> block_25a [color=red]
	block_d -> block_cd [color=green]
	block_202 -> block_222 [color=green]
	block_188 -> block_19b [color=red]
	block_40 -> block_fe [color=green]
	block_202 -> block_21e [color=red]
	block_cd -> block_d5 [color=red]
	block_1d5 -> block_1e9 [color=red]
	block_222 -> block_cb [color=blue]
	block_158 -> block_164 [color=green]
	block_226 -> block_239 [color=red]
	block_40 -> block_4b [color=red]
	block_1c6 -> block_1bd [color=blue]
	block_226 -> block_23d [color=green]
	block_1bd -> block_1c6 [color=red]
	block_1d5 -> block_202 [color=green]
	block_d9 -> block_179 [color=blue]
	block_56 -> block_7d [color=red]
	block_25e -> block_246 [color=blue]
	block_23d -> block_249 [color=blue]
	block_246 -> block_cb [color=blue]
	block_158 -> block_160 [color=red]
	block_fe -> block_188 [color=blue]
	block_56 -> block_c6 [color=green]
	block_d -> block_40 [color=red]
	block_179 -> block_e2 [color=blue]
	block_4b -> block_56 [color=red]
	block_249 -> block_25e [color=green]
	block_19f -> block_1bd [color=cyan]
	block_164 -> block_226 [color=blue]
	block_188 -> block_19f [color=green]
	block_4b -> block_158 [color=green]
	block_0 -> block_56 [color=green]
}
