digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x80\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = CALLVALUE()\l6: %03 = DUP1(%02)\l7: %04 = ISZERO(%02)\l8: %05 = #0x10\lb: JUMPI(%05, %04)\l"]
		block_c [label="c: %06 = #0x0\le: %07 = DUP1(%06)\lf: REVERT(%06, %06)\l"]
		block_10 [label="10: JUMPDEST()\l11: POP()\l12: %08 = #0x4\l14: %09 = CALLDATASIZE()\l15: %0A = LT(%09, %08)\l16: %0B = #0x5D\l19: JUMPI(%0B, %0A)\l"]
		block_1a [label="1a: %0C = #0x100000000000000000000000000000000000000000000000000000000\l38: %0D = #0x0\l3a: %0E = CALLDATALOAD(%0D)\l3b: %0F = DIV(%0E, %0C)\l3c: %10 = #0x8DA5CB5B\l41: %11 = DUP2(%0F)\l42: %12 = EQ(%0F, %10)\l43: %13 = #0x62\l46: JUMPI(%13, %12)\l"]
		block_47 [label="47: %14 = DUP1(%0F)\l48: %15 = #0xC71ECCCC\l4d: %16 = EQ(%15, %0F)\l4e: %17 = #0x91\l51: JUMPI(%17, %16)\l"]
		block_52 [label="52: %18 = DUP1(%0F)\l53: %19 = #0xF2FDE38B\l58: %1A = EQ(%19, %0F)\l59: %1B = #0xA6\l5c: JUMPI(%1B, %1A)\l"]
		block_5d [label="5d: JUMPDEST()\l5e: %F8 = #0x0\l60: %F9 = DUP1(%F8)\l61: REVERT(%F8, %F8)\l"]
		block_62 [label="62: JUMPDEST()\l63: %DF = #0x0\l65: %E0 = SLOAD(%DF)\l66: %E1 = #0x75\l69: SWAP1(%E0)\l6a: %E2 = #0x1\l6c: %E3 = #0xA0\l6e: %E4 = #0x2\l70: %E5 = EXP(%E4, %E3)\l71: %E6 = SUB(%E5, %E2)\l72: %E7 = AND(%E6, %E0)\l73: %E8 = DUP2(%E1)\l74: JUMP(%E1)\l"]
		block_75 [label="75: JUMPDEST()\l76: %E9 = #0x40\l78: %EA = MLOAD(%E9)\l79: %EB = #0x1\l7b: %EC = #0xA0\l7d: %ED = #0x2\l7f: %EE = EXP(%ED, %EC)\l80: %EF = SUB(%EE, %EB)\l81: SWAP1(%EA)\l82: SWAP2(%E7)\l83: %F0 = AND(%E7, %EF)\l84: %F1 = DUP2(%EA)\l85: MSTORE(%EA, %F0)\l86: %F2 = #0x20\l88: %F3 = ADD(%F2, %EA)\l89: %F4 = #0x40\l8b: %F5 = MLOAD(%F4)\l8c: %F6 = DUP1(%F5)\l8d: SWAP2(%F3)\l8e: %F7 = SUB(%F3, %F5)\l8f: SWAP1(%F5)\l90: RETURN(%F5, %F7)\l"]
		block_91 [label="91: JUMPDEST()\l92: %99 = #0xA4\l95: %9A = #0x9F\l98: %9B = CALLDATASIZE()\l99: %9C = #0x4\l9b: %9D = #0x2B5\l9e: JUMP(%9D)\l"]
		block_9f [label="9f: JUMPDEST()\la0: %BD = #0xB9\la3: JUMP(%BD)\l"]
		block_a4 [label="a4: JUMPDEST()\la5: STOP()\l"]
		block_a6 [label="a6: JUMPDEST()\la7: %1E = #0xA4\laa: %1F = #0xB4\lad: %20 = CALLDATASIZE()\lae: %21 = #0x4\lb0: %22 = #0x285\lb3: JUMP(%22)\l"]
		block_b4 [label="b4: JUMPDEST()\lb5: %3B = #0x139\lb8: JUMP(%3B)\l"]
		block_b9 [label="b9: JUMPDEST()\lba: %BE = #0x0\lbc: %BF = SLOAD(%BE)\lbd: %C0 = #0x1\lbf: %C1 = #0xA0\lc1: %C2 = #0x2\lc3: %C3 = EXP(%C2, %C1)\lc4: %C4 = SUB(%C3, %C0)\lc5: %C5 = AND(%C4, %BF)\lc6: %C6 = CALLER()\lc7: %C7 = EQ(%C6, %C5)\lc8: %C8 = #0x132\lcb: JUMPI(%C8, %C7)\l"]
		block_cc [label="cc: %C9 = #0x40\lce: %CA = MLOAD(%C9)\lcf: %CB = #0x8C379A000000000000000000000000000000000000000000000000000000000\lf0: %CC = DUP2(%CA)\lf1: MSTORE(%CA, %CB)\lf2: %CD = #0x20\lf4: %CE = #0x4\lf6: %CF = DUP3(%CA)\lf7: %D0 = ADD(%CA, %CE)\lf8: MSTORE(%D0, %CD)\lf9: %D1 = #0x1B\lfb: %D2 = #0x24\lfd: %D3 = DUP3(%CA)\lfe: %D4 = ADD(%CA, %D2)\lff: MSTORE(%D4, %D1)\l100: %D5 = #0x6D73672E73656E646572206973206E6F7420746865206F776E65720000000000\l121: %D6 = #0x44\l123: %D7 = DUP3(%CA)\l124: %D8 = ADD(%CA, %D6)\l125: MSTORE(%D8, %D5)\l126: %D9 = #0x64\l128: %DA = ADD(%D9, %CA)\l"]
		block_129 [label="129: JUMPDEST()\l12a: %DB = #0x40\l12c: %DC = MLOAD(%DB)\l12d: %DD = DUP1(%DC)\l12e: SWAP2(%DA)\l12f: %DE = SUB(%DA, %DC)\l130: SWAP1(%DC)\l131: REVERT(%DC, %DE)\l"]
		block_132 [label="132: JUMPDEST()\l133: POP()\l134: POP()\l135: POP()\l136: POP()\l137: POP()\l138: JUMP(%99)\l"]
		block_139 [label="139: JUMPDEST()\l13a: %3C = #0x0\l13c: %3D = SLOAD(%3C)\l13d: %3E = #0x1\l13f: %3F = #0xA0\l141: %40 = #0x2\l143: %41 = EXP(%40, %3F)\l144: %42 = SUB(%41, %3E)\l145: %43 = AND(%42, %3D)\l146: %44 = CALLER()\l147: %45 = EQ(%44, %43)\l148: %46 = #0x1AD\l14b: JUMPI(%46, %45)\l"]
		block_14c [label="14c: %47 = #0x40\l14e: %48 = MLOAD(%47)\l14f: %49 = #0x8C379A000000000000000000000000000000000000000000000000000000000\l170: %4A = DUP2(%48)\l171: MSTORE(%48, %49)\l172: %4B = #0x20\l174: %4C = #0x4\l176: %4D = DUP3(%48)\l177: %4E = ADD(%48, %4C)\l178: MSTORE(%4E, %4B)\l179: %4F = #0x1B\l17b: %50 = #0x24\l17d: %51 = DUP3(%48)\l17e: %52 = ADD(%48, %50)\l17f: MSTORE(%52, %4F)\l180: %53 = #0x6D73672E73656E646572206973206E6F7420746865206F776E65720000000000\l1a1: %54 = #0x44\l1a3: %55 = DUP3(%48)\l1a4: %56 = ADD(%48, %54)\l1a5: MSTORE(%56, %53)\l1a6: %57 = #0x64\l1a8: %58 = ADD(%57, %48)\l1a9: %59 = #0x129\l1ac: JUMP(%59)\l"]
		block_1ad [label="1ad: JUMPDEST()\l1ae: %5E = #0x1\l1b0: %5F = #0xA0\l1b2: %60 = #0x2\l1b4: %61 = EXP(%60, %5F)\l1b5: %62 = SUB(%61, %5E)\l1b6: %63 = DUP2(%2E)\l1b7: %64 = AND(%2E, %62)\l1b8: %65 = #0x21D\l1bb: JUMPI(%65, %64)\l"]
		block_1bc [label="1bc: %66 = #0x40\l1be: %67 = MLOAD(%66)\l1bf: %68 = #0x8C379A000000000000000000000000000000000000000000000000000000000\l1e0: %69 = DUP2(%67)\l1e1: MSTORE(%67, %68)\l1e2: %6A = #0x20\l1e4: %6B = #0x4\l1e6: %6C = DUP3(%67)\l1e7: %6D = ADD(%67, %6B)\l1e8: MSTORE(%6D, %6A)\l1e9: %6E = #0x1D\l1eb: %6F = #0x24\l1ed: %70 = DUP3(%67)\l1ee: %71 = ADD(%67, %6F)\l1ef: MSTORE(%71, %6E)\l1f0: %72 = #0x6E6577206F776E657220697320746865207A65726F2061646472657373000000\l211: %73 = #0x44\l213: %74 = DUP3(%67)\l214: %75 = ADD(%67, %73)\l215: MSTORE(%75, %72)\l216: %76 = #0x64\l218: %77 = ADD(%76, %67)\l219: %78 = #0x129\l21c: JUMP(%78)\l"]
		block_21d [label="21d: JUMPDEST()\l21e: %7D = #0x0\l220: %7E = DUP1(%7D)\l221: %7F = SLOAD(%7D)\l222: %80 = #0x40\l224: %81 = MLOAD(%80)\l225: %82 = #0x1\l227: %83 = #0xA0\l229: %84 = #0x2\l22b: %85 = EXP(%84, %83)\l22c: %86 = SUB(%85, %82)\l22d: %87 = DUP1(%86)\l22e: %88 = DUP6(%2E)\l22f: %89 = AND(%2E, %86)\l230: SWAP4(%7D)\l231: SWAP3(%7F)\l232: %8A = AND(%7F, %86)\l233: SWAP2(%7D)\l234: %8B = #0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\l255: SWAP2(%81)\l256: LOG3(%81, %7D, %8B, %8A, %89)\l257: %8C = #0x0\l259: %8D = DUP1(%8C)\l25a: %8E = SLOAD(%8C)\l25b: %8F = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l270: %90 = NOT(%8F)\l271: %91 = AND(%90, %8E)\l272: %92 = #0x1\l274: %93 = #0xA0\l276: %94 = #0x2\l278: %95 = EXP(%94, %93)\l279: %96 = SUB(%95, %92)\l27a: SWAP3(%2E)\l27b: SWAP1(%91)\l27c: SWAP3(%96)\l27d: %97 = AND(%96, %2E)\l27e: SWAP2(%91)\l27f: SWAP1(%8C)\l280: SWAP2(%97)\l281: %98 = OR(%97, %91)\l282: SWAP1(%8C)\l283: SSTORE(%8C, %98)\l284: JUMP(%1E)\l"]
		block_285 [label="285: JUMPDEST()\l286: %23 = #0x0\l288: %24 = #0x20\l28a: %25 = DUP3(%21)\l28b: %26 = DUP5(%20)\l28c: %27 = SUB(%20, %21)\l28d: %28 = SLT(%27, %24)\l28e: %29 = ISZERO(%28)\l28f: %2A = #0x297\l292: JUMPI(%2A, %29)\l"]
		block_293 [label="293: %2B = #0x0\l295: %2C = DUP1(%2B)\l296: REVERT(%2B, %2B)\l"]
		block_297 [label="297: JUMPDEST()\l298: %2D = DUP2(%21)\l299: %2E = CALLDATALOAD(%21)\l29a: %2F = #0x1\l29c: %30 = #0xA0\l29e: %31 = #0x2\l2a0: %32 = EXP(%31, %30)\l2a1: %33 = SUB(%32, %2F)\l2a2: %34 = DUP2(%2E)\l2a3: %35 = AND(%2E, %33)\l2a4: %36 = DUP2(%2E)\l2a5: %37 = EQ(%2E, %35)\l2a6: %38 = #0x2AE\l2a9: JUMPI(%38, %37)\l"]
		block_2aa [label="2aa: %39 = #0x0\l2ac: %3A = DUP1(%39)\l2ad: REVERT(%39, %39)\l"]
		block_2ae [label="2ae: JUMPDEST()\l2af: SWAP4(%1F)\l2b0: SWAP3(%20)\l2b1: POP()\l2b2: POP()\l2b3: POP()\l2b4: JUMP(%1F)\l"]
		block_2b5 [label="2b5: JUMPDEST()\l2b6: %9E = #0x0\l2b8: %9F = DUP1(%9E)\l2b9: %A0 = #0x0\l2bb: %A1 = DUP1(%A0)\l2bc: %A2 = #0x0\l2be: %A3 = #0xA0\l2c0: %A4 = DUP7(%9C)\l2c1: %A5 = DUP9(%9B)\l2c2: %A6 = SUB(%9B, %9C)\l2c3: %A7 = SLT(%A6, %A3)\l2c4: %A8 = ISZERO(%A7)\l2c5: %A9 = #0x2CD\l2c8: JUMPI(%A9, %A8)\l"]
		block_2c9 [label="2c9: %AA = #0x0\l2cb: %AB = DUP1(%AA)\l2cc: REVERT(%AA, %AA)\l"]
		block_2cd [label="2cd: JUMPDEST()\l2ce: POP()\l2cf: POP()\l2d0: %AC = DUP4(%9C)\l2d1: %AD = CALLDATALOAD(%9C)\l2d2: SWAP6(%9A)\l2d3: %AE = #0x20\l2d5: %AF = DUP6(%9C)\l2d6: %B0 = ADD(%9C, %AE)\l2d7: %B1 = CALLDATALOAD(%B0)\l2d8: SWAP6(%9B)\l2d9: POP()\l2da: %B2 = #0x40\l2dc: %B3 = DUP6(%9C)\l2dd: %B4 = ADD(%9C, %B2)\l2de: %B5 = CALLDATALOAD(%B4)\l2df: SWAP5(%9C)\l2e0: %B6 = #0x60\l2e2: %B7 = DUP2(%9C)\l2e3: %B8 = ADD(%9C, %B6)\l2e4: %B9 = CALLDATALOAD(%B8)\l2e5: SWAP5(%9E)\l2e6: POP()\l2e7: %BA = #0x80\l2e9: %BB = ADD(%BA, %9C)\l2ea: %BC = CALLDATALOAD(%BB)\l2eb: SWAP3(%9E)\l2ec: POP()\l2ed: SWAP1(%A0)\l2ee: POP()\l2ef: JUMP(%9A)\l"]
		block_2f0 [label="2f0: [NO_SSA] INVALID\l"]
		block_2f1 [label="2f1: [NO_SSA] LOG2\l2f2: [NO_SSA] PUSH5\l2f8: [NO_SSA] INVALID\l"]
		block_2f9 [label="2f9: [NO_SSA] SLT\l2fa: [NO_SSA] SHA3\l2fb: [NO_SSA] SWAP2\l2fc: [NO_SSA] PUSH21\l312: [NO_SSA] EXTCODESIZE\l313: [NO_SSA] ISZERO\l314: [NO_SSA] DUP3\l315: [NO_SSA] INVALID\l"]
		block_316 [label="316: [NO_SSA] PUSH6\l31d: [NO_SSA] PUSH16\l"]
	}
	block_62 -> block_75 [color=blue]
	block_21d -> block_a4 [color=blue]
	block_285 -> block_297 [color=green]
	block_14c -> block_129 [color=blue]
	block_9f -> block_b9 [color=blue]
	block_b9 -> block_132 [color=green]
	block_2b5 -> block_2cd [color=green]
	block_285 -> block_293 [color=red]
	block_10 -> block_5d [color=green]
	block_0 -> block_10 [color=green]
	block_47 -> block_52 [color=red]
	block_91 -> block_2b5 [color=blue]
	block_10 -> block_1a [color=red]
	block_2b5 -> block_2c9 [color=red]
	block_1ad -> block_1bc [color=red]
	block_0 -> block_c [color=red]
	block_52 -> block_a6 [color=green]
	block_1a -> block_47 [color=red]
	block_297 -> block_2aa [color=red]
	block_2ae -> block_b4 [color=blue]
	block_52 -> block_5d [color=red]
	block_cc -> block_129 [color=cyan]
	block_47 -> block_91 [color=green]
	block_297 -> block_2ae [color=green]
	block_1bc -> block_129 [color=blue]
	block_139 -> block_1ad [color=green]
	block_1a -> block_62 [color=green]
	block_132 -> block_a4 [color=blue]
	block_a6 -> block_285 [color=blue]
	block_2cd -> block_9f [color=blue]
	block_139 -> block_14c [color=red]
	block_1ad -> block_21d [color=green]
	block_b9 -> block_cc [color=red]
	block_b4 -> block_139 [color=blue]
}
