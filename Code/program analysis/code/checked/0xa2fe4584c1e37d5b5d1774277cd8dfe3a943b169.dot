digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x60\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = CALLDATASIZE()\l6: %03 = ISZERO(%02)\l7: %04 = #0x55\la: JUMPI(%04, %03)\l"]
		block_b [label="b: %05 = #0x0\ld: %06 = CALLDATALOAD(%05)\le: %07 = #0x100000000000000000000000000000000000000000000000000000000\l2c: SWAP1(%06)\l2d: %08 = DIV(%06, %07)\l2e: %09 = #0xFFFFFFFF\l33: %0A = AND(%09, %08)\l34: %0B = DUP1(%0A)\l35: %0C = #0x66117276\l3a: %0D = EQ(%0C, %0A)\l3b: %0E = #0x148\l3e: JUMPI(%0E, %0D)\l"]
		block_3f [label="3f: %0F = DUP1(%0A)\l40: %10 = #0x82C90AC0\l45: %11 = EQ(%10, %0A)\l46: %12 = #0x17E\l49: JUMPI(%12, %11)\l"]
		block_4a [label="4a: %13 = DUP1(%0A)\l4b: %14 = #0xB76EA962\l50: %15 = EQ(%14, %0A)\l51: %16 = #0x1B4\l54: JUMPI(%16, %15)\l"]
		block_55 [label="55: JUMPDEST()\l56: %192 = #0x146\l"]
		block_59 [label="59: JUMPDEST()\l5a: %193 = #0x0\l5c: %194 = #0x0\l5e: SWAP1(%193)\l5f: %195 = SLOAD(%193)\l60: SWAP1(%194)\l61: %196 = #0x100\l64: %197 = EXP(%196, %194)\l65: SWAP1(%195)\l66: %198 = DIV(%195, %197)\l67: %199 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l7c: %19A = AND(%199, %198)\l7d: %19B = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l92: %19C = AND(%19B, %19A)\l93: %19D = CALLVALUE()\l94: %19E = #0x40\l96: %19F = MLOAD(%19E)\l97: %1A0 = DUP1(%19F)\l98: SWAP1(%19F)\l99: POP()\l9a: %1A1 = #0x0\l9c: %1A2 = #0x40\l9e: %1A3 = MLOAD(%1A2)\l9f: %1A4 = DUP1(%1A3)\la0: %1A5 = DUP4(%19F)\la1: %1A6 = SUB(%19F, %1A3)\la2: %1A7 = DUP2(%1A3)\la3: %1A8 = DUP6(%19D)\la4: %1A9 = DUP8(%19C)\la5: %1AA = #0x8796\la8: %1AB = GAS()\la9: %1AC = SUB(%1AB, %1AA)\laa: %1AD = CALL(%1AC, %19C, %19D, %1A3, %1A6, %1A3, %1A1)\lab: SWAP3(%19C)\lac: POP()\lad: POP()\lae: POP()\laf: %1AE = ISZERO(%1AD)\lb0: %1AF = #0x13D\lb3: JUMPI(%1AF, %1AE)\l"]
		block_b4 [label="b4: %1B0 = #0x23919512B2162DDC59B67A65E3B03C419D4105366F7D4A632F5D3C3BEE9B1CFF\ld5: %1B1 = #0x0\ld7: %1B2 = #0x0\ld9: SWAP1(%1B1)\lda: %1B3 = SLOAD(%1B1)\ldb: SWAP1(%1B2)\ldc: %1B4 = #0x100\ldf: %1B5 = EXP(%1B4, %1B2)\le0: SWAP1(%1B3)\le1: %1B6 = DIV(%1B3, %1B5)\le2: %1B7 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\lf7: %1B8 = AND(%1B7, %1B6)\lf8: %1B9 = #0x40\lfa: %1BA = MLOAD(%1B9)\lfb: %1BB = DUP1(%1BA)\lfc: %1BC = DUP3(%1B8)\lfd: %1BD = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l112: %1BE = AND(%1BD, %1B8)\l113: %1BF = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l128: %1C0 = AND(%1BF, %1BE)\l129: %1C1 = DUP2(%1BA)\l12a: MSTORE(%1BA, %1C0)\l12b: %1C2 = #0x20\l12d: %1C3 = ADD(%1C2, %1BA)\l12e: SWAP2(%1B8)\l12f: POP()\l130: POP()\l131: %1C4 = #0x40\l133: %1C5 = MLOAD(%1C4)\l134: %1C6 = DUP1(%1C5)\l135: SWAP2(%1C3)\l136: %1C7 = SUB(%1C3, %1C5)\l137: SWAP1(%1C5)\l138: LOG1(%1C5, %1C7, %1B0)\l139: %1C8 = #0x143\l13c: JUMP(%1C8)\l"]
		block_13d [label="13d: JUMPDEST()\l13e: %1C9 = #0x0\l140: %1CA = #0x0\l142: REVERT(%1CA, %1C9)\l"]
		block_143 [label="143: JUMPDEST()\l"]
		block_144 [label="144: JUMPDEST()\l145: JUMP(%192)\l"]
		block_146 [label="146: JUMPDEST()\l147: STOP()\l"]
		block_148 [label="148: JUMPDEST()\l149: %161 = CALLVALUE()\l14a: %162 = ISZERO(%161)\l14b: %163 = #0x150\l14e: JUMPI(%163, %162)\l"]
		block_14f [label="14f: INVALID()\l"]
		block_150 [label="150: JUMPDEST()\l151: %164 = #0x17C\l154: %165 = #0x4\l156: %166 = DUP1(%165)\l157: %167 = DUP1(%165)\l158: %168 = CALLDATALOAD(%165)\l159: %169 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l16e: %16A = AND(%169, %168)\l16f: SWAP1(%165)\l170: %16B = #0x20\l172: %16C = ADD(%16B, %165)\l173: SWAP1(%16A)\l174: SWAP2(%165)\l175: SWAP1(%16C)\l176: POP()\l177: POP()\l178: %16D = #0x225\l17b: JUMP(%16D)\l"]
		block_17c [label="17c: JUMPDEST()\l17d: STOP()\l"]
		block_17e [label="17e: JUMPDEST()\l17f: %130 = CALLVALUE()\l180: %131 = ISZERO(%130)\l181: %132 = #0x186\l184: JUMPI(%132, %131)\l"]
		block_185 [label="185: INVALID()\l"]
		block_186 [label="186: JUMPDEST()\l187: %133 = #0x1B2\l18a: %134 = #0x4\l18c: %135 = DUP1(%134)\l18d: %136 = DUP1(%134)\l18e: %137 = CALLDATALOAD(%134)\l18f: %138 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1a4: %139 = AND(%138, %137)\l1a5: SWAP1(%134)\l1a6: %13A = #0x20\l1a8: %13B = ADD(%13A, %134)\l1a9: SWAP1(%139)\l1aa: SWAP2(%134)\l1ab: SWAP1(%13B)\l1ac: POP()\l1ad: POP()\l1ae: %13C = #0x2C8\l1b1: JUMP(%13C)\l"]
		block_1b2 [label="1b2: JUMPDEST()\l1b3: STOP()\l"]
		block_1b4 [label="1b4: JUMPDEST()\l1b5: %50 = #0x223\l1b8: %51 = #0x4\l1ba: %52 = DUP1(%51)\l1bb: %53 = DUP1(%51)\l1bc: %54 = CALLDATALOAD(%51)\l1bd: %55 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1d2: %56 = AND(%55, %54)\l1d3: SWAP1(%51)\l1d4: %57 = #0x20\l1d6: %58 = ADD(%57, %51)\l1d7: SWAP1(%56)\l1d8: SWAP2(%51)\l1d9: SWAP1(%58)\l1da: %59 = DUP1(%58)\l1db: %5A = CALLDATALOAD(%58)\l1dc: SWAP1(%58)\l1dd: %5B = #0x20\l1df: %5C = ADD(%5B, %58)\l1e0: SWAP1(%5A)\l1e1: %5D = DUP3(%51)\l1e2: %5E = ADD(%51, %5A)\l1e3: %5F = DUP1(%5E)\l1e4: %60 = CALLDATALOAD(%5E)\l1e5: SWAP1(%5E)\l1e6: %61 = #0x20\l1e8: %62 = ADD(%61, %5E)\l1e9: SWAP1(%60)\l1ea: %63 = DUP1(%60)\l1eb: %64 = DUP1(%60)\l1ec: %65 = #0x1F\l1ee: %66 = ADD(%65, %60)\l1ef: %67 = #0x20\l1f1: %68 = DUP1(%67)\l1f2: SWAP2(%66)\l1f3: %69 = DIV(%66, %67)\l1f4: %6A = MUL(%69, %67)\l1f5: %6B = #0x20\l1f7: %6C = ADD(%6B, %6A)\l1f8: %6D = #0x40\l1fa: %6E = MLOAD(%6D)\l1fb: SWAP1(%6C)\l1fc: %6F = DUP2(%6E)\l1fd: %70 = ADD(%6E, %6C)\l1fe: %71 = #0x40\l200: MSTORE(%71, %70)\l201: %72 = DUP1(%6E)\l202: SWAP4(%62)\l203: SWAP3(%60)\l204: SWAP2(%60)\l205: SWAP1(%6E)\l206: %73 = DUP2(%60)\l207: %74 = DUP2(%6E)\l208: MSTORE(%6E, %60)\l209: %75 = #0x20\l20b: %76 = ADD(%75, %6E)\l20c: %77 = DUP4(%62)\l20d: %78 = DUP4(%60)\l20e: %79 = DUP1(%60)\l20f: %7A = DUP3(%62)\l210: %7B = DUP5(%76)\l211: CALLDATACOPY(%76, %62, %60)\l212: %7C = DUP3(%76)\l213: %7D = ADD(%76, %60)\l214: SWAP2(%76)\l215: POP()\l216: POP()\l217: POP()\l218: POP()\l219: POP()\l21a: POP()\l21b: SWAP2(%51)\l21c: SWAP1(%5C)\l21d: POP()\l21e: POP()\l21f: %7E = #0x36B\l222: JUMP(%7E)\l"]
		block_223 [label="223: JUMPDEST()\l224: STOP()\l"]
		block_225 [label="225: JUMPDEST()\l226: %16E = #0x1\l228: %16F = #0x0\l22a: SWAP1(%16E)\l22b: %170 = SLOAD(%16E)\l22c: SWAP1(%16F)\l22d: %171 = #0x100\l230: %172 = EXP(%171, %16F)\l231: SWAP1(%170)\l232: %173 = DIV(%170, %172)\l233: %174 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l248: %175 = AND(%174, %173)\l249: %176 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l25e: %177 = AND(%176, %175)\l25f: %178 = CALLER()\l260: %179 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l275: %17A = AND(%179, %178)\l276: %17B = EQ(%17A, %177)\l277: %17C = ISZERO(%17B)\l278: %17D = ISZERO(%17C)\l279: %17E = #0x282\l27c: JUMPI(%17E, %17D)\l"]
		block_27d [label="27d: %17F = #0x0\l27f: %180 = #0x0\l281: REVERT(%180, %17F)\l"]
		block_282 [label="282: JUMPDEST()\l283: %181 = DUP1(%16A)\l284: %182 = #0x1\l286: %183 = #0x0\l288: %184 = #0x100\l28b: %185 = EXP(%184, %183)\l28c: %186 = DUP2(%182)\l28d: %187 = SLOAD(%182)\l28e: %188 = DUP2(%185)\l28f: %189 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l2a4: %18A = MUL(%189, %185)\l2a5: %18B = NOT(%18A)\l2a6: %18C = AND(%18B, %187)\l2a7: SWAP1(%185)\l2a8: %18D = DUP4(%16A)\l2a9: %18E = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l2be: %18F = AND(%18E, %16A)\l2bf: %190 = MUL(%18F, %185)\l2c0: %191 = OR(%190, %18C)\l2c1: SWAP1(%182)\l2c2: SSTORE(%182, %191)\l2c3: POP()\l"]
		block_2c4 [label="2c4: JUMPDEST()\l"]
		block_2c5 [label="2c5: JUMPDEST()\l2c6: POP()\l2c7: JUMP(%164)\l"]
		block_2c8 [label="2c8: JUMPDEST()\l2c9: %13D = #0x1\l2cb: %13E = #0x0\l2cd: SWAP1(%13D)\l2ce: %13F = SLOAD(%13D)\l2cf: SWAP1(%13E)\l2d0: %140 = #0x100\l2d3: %141 = EXP(%140, %13E)\l2d4: SWAP1(%13F)\l2d5: %142 = DIV(%13F, %141)\l2d6: %143 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l2eb: %144 = AND(%143, %142)\l2ec: %145 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l301: %146 = AND(%145, %144)\l302: %147 = CALLER()\l303: %148 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l318: %149 = AND(%148, %147)\l319: %14A = EQ(%149, %146)\l31a: %14B = ISZERO(%14A)\l31b: %14C = ISZERO(%14B)\l31c: %14D = #0x325\l31f: JUMPI(%14D, %14C)\l"]
		block_320 [label="320: %14E = #0x0\l322: %14F = #0x0\l324: REVERT(%14F, %14E)\l"]
		block_325 [label="325: JUMPDEST()\l326: %150 = DUP1(%139)\l327: %151 = #0x0\l329: %152 = #0x0\l32b: %153 = #0x100\l32e: %154 = EXP(%153, %152)\l32f: %155 = DUP2(%151)\l330: %156 = SLOAD(%151)\l331: %157 = DUP2(%154)\l332: %158 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l347: %159 = MUL(%158, %154)\l348: %15A = NOT(%159)\l349: %15B = AND(%15A, %156)\l34a: SWAP1(%154)\l34b: %15C = DUP4(%139)\l34c: %15D = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l361: %15E = AND(%15D, %139)\l362: %15F = MUL(%15E, %154)\l363: %160 = OR(%15F, %15B)\l364: SWAP1(%151)\l365: SSTORE(%151, %160)\l366: POP()\l"]
		block_367 [label="367: JUMPDEST()\l"]
		block_368 [label="368: JUMPDEST()\l369: POP()\l36a: JUMP(%133)\l"]
		block_36b [label="36b: JUMPDEST()\l36c: %7F = #0x1\l36e: %80 = #0x0\l370: SWAP1(%7F)\l371: %81 = SLOAD(%7F)\l372: SWAP1(%80)\l373: %82 = #0x100\l376: %83 = EXP(%82, %80)\l377: SWAP1(%81)\l378: %84 = DIV(%81, %83)\l379: %85 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l38e: %86 = AND(%85, %84)\l38f: %87 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l3a4: %88 = AND(%87, %86)\l3a5: %89 = CALLER()\l3a6: %8A = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l3bb: %8B = AND(%8A, %89)\l3bc: %8C = EQ(%8B, %88)\l3bd: %8D = ISZERO(%8C)\l3be: %8E = ISZERO(%8D)\l3bf: %8F = #0x3C8\l3c2: JUMPI(%8F, %8E)\l"]
		block_3c3 [label="3c3: %90 = #0x0\l3c5: %91 = #0x0\l3c7: REVERT(%91, %90)\l"]
		block_3c8 [label="3c8: JUMPDEST()\l3c9: %92 = DUP2(%56)\l3ca: %93 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l3df: %94 = AND(%93, %56)\l3e0: %95 = CALLVALUE()\l3e1: %96 = DUP3(%6E)\l3e2: %97 = #0x40\l3e4: %98 = MLOAD(%97)\l3e5: %99 = DUP1(%98)\l3e6: %9A = DUP3(%6E)\l3e7: %9B = DUP1(%6E)\l3e8: %9C = MLOAD(%6E)\l3e9: SWAP1(%6E)\l3ea: %9D = #0x20\l3ec: %9E = ADD(%9D, %6E)\l3ed: SWAP1(%9C)\l3ee: %9F = DUP1(%9C)\l3ef: %A0 = DUP4(%98)\l3f0: %A1 = DUP4(%9E)\l3f1: %A2 = #0x0\l3f3: %A3 = DUP4(%9C)\l3f4: %A4 = EQ(%9C, %A2)\l3f5: %A5 = #0x41D\l3f8: JUMPI(%A5, %A4)\l"]
		block_3f9 [label="3f9: JUMPDEST()\l3fa: %A6 = DUP1(%9E)\l3fb: %A7 = MLOAD(%9E)\l3fc: %A8 = DUP3(%98)\l3fd: MSTORE(%98, %A7)\l3fe: %A9 = #0x20\l400: %AA = DUP4(%9C)\l401: %AB = GT(%9C, %A9)\l402: %AC = ISZERO(%AB)\l403: %AD = #0x41D\l406: JUMPI(%AD, %AC)\l"]
		block_407 [label="407: %AE = #0x20\l409: %AF = DUP3(%98)\l40a: %B0 = ADD(%98, %AE)\l40b: SWAP2(%98)\l40c: POP()\l40d: %B1 = #0x20\l40f: %B2 = DUP2(%9E)\l410: %B3 = ADD(%9E, %B1)\l411: SWAP1(%9E)\l412: POP()\l413: %B4 = #0x20\l415: %B5 = DUP4(%9C)\l416: %B6 = SUB(%9C, %B4)\l417: SWAP3(%9C)\l418: POP()\l419: %B7 = #0x3F9\l41c: JUMP(%B7)\l"]
		block_41d [label="41d: JUMPDEST()\l41e: POP()\l41f: POP()\l420: POP()\l421: SWAP1(%9E)\l422: POP()\l423: SWAP1(%98)\l424: %F4 = DUP2(%9C)\l425: %F5 = ADD(%9C, %98)\l426: SWAP1(%9C)\l427: %F6 = #0x1F\l429: %F7 = AND(%F6, %9C)\l42a: %F8 = DUP1(%F7)\l42b: %F9 = ISZERO(%F7)\l42c: %FA = #0x449\l42f: JUMPI(%FA, %F9)\l"]
		block_430 [label="430: %FB = DUP1(%F7)\l431: %FC = DUP3(%F5)\l432: %FD = SUB(%F5, %F7)\l433: %FE = DUP1(%FD)\l434: %FF = MLOAD(%FD)\l435: %100 = #0x1\l437: %101 = DUP4(%F7)\l438: %102 = #0x20\l43a: %103 = SUB(%102, %F7)\l43b: %104 = #0x100\l43e: %105 = EXP(%104, %103)\l43f: %106 = SUB(%105, %100)\l440: %107 = NOT(%106)\l441: %108 = AND(%107, %FF)\l442: %109 = DUP2(%FD)\l443: MSTORE(%FD, %108)\l444: %10A = #0x20\l446: %10B = ADD(%10A, %FD)\l447: SWAP2(%F5)\l448: POP()\l"]
		block_449 [label="449: JUMPDEST()\l44a: POP()\l44b: SWAP2(%6E)\l44c: POP()\l44d: POP()\l44e: %11E = #0x0\l450: %11F = #0x40\l452: %120 = MLOAD(%11F)\l453: %121 = DUP1(%120)\l454: %122 = DUP4(%F5)\l455: %123 = SUB(%F5, %120)\l456: %124 = DUP2(%120)\l457: %125 = DUP6(%95)\l458: %126 = DUP8(%94)\l459: %127 = #0x8796\l45c: %128 = GAS()\l45d: %129 = SUB(%128, %127)\l45e: %12A = CALL(%129, %94, %95, %120, %123, %120, %11E)\l45f: SWAP3(%94)\l460: POP()\l461: POP()\l462: POP()\l463: %12B = ISZERO(%12A)\l464: %12C = ISZERO(%12B)\l465: %12D = #0x46E\l468: JUMPI(%12D, %12C)\l"]
		block_469 [label="469: %12E = #0x0\l46b: %12F = #0x0\l46d: REVERT(%12F, %12E)\l"]
		block_46e [label="46e: JUMPDEST()\l"]
		block_46f [label="46f: JUMPDEST()\l"]
		block_470 [label="470: JUMPDEST()\l471: POP()\l472: POP()\l473: JUMP(%50)\l"]
		block_474 [label="474: [NO_SSA] STOP\l"]
	}
	block_150 -> block_225 [color=blue]
	block_470 -> block_223 [color=blue]
	block_144 -> block_146 [color=blue]
	block_0 -> block_b [color=red]
	block_3f -> block_17e [color=green]
	block_3f9 -> block_41d [color=green]
	block_b -> block_148 [color=green]
	block_148 -> block_150 [color=green]
	block_225 -> block_282 [color=green]
	block_59 -> block_b4 [color=red]
	block_36b -> block_3c8 [color=green]
	block_449 -> block_469 [color=red]
	block_59 -> block_13d [color=green]
	block_b4 -> block_143 [color=blue]
	block_2c5 -> block_17c [color=blue]
	block_55 -> block_59 [color=cyan]
	block_368 -> block_1b2 [color=blue]
	block_4a -> block_55 [color=red]
	block_3f9 -> block_407 [color=red]
	block_b -> block_3f [color=red]
	block_1b4 -> block_36b [color=blue]
	block_4a -> block_1b4 [color=green]
	block_41d -> block_449 [color=green]
	block_186 -> block_2c8 [color=blue]
	block_2c8 -> block_320 [color=red]
	block_46f -> block_470 [color=cyan]
	block_325 -> block_367 [color=cyan]
	block_367 -> block_368 [color=cyan]
	block_225 -> block_27d [color=red]
	block_2c8 -> block_325 [color=green]
	block_3f -> block_4a [color=red]
	block_143 -> block_144 [color=cyan]
	block_449 -> block_46e [color=green]
	block_282 -> block_2c4 [color=cyan]
	block_0 -> block_55 [color=green]
	block_148 -> block_14f [color=red]
	block_36b -> block_3c3 [color=red]
	block_3c8 -> block_3f9 [color=red]
	block_46e -> block_46f [color=cyan]
	block_430 -> block_449 [color=cyan]
	block_407 -> block_3f9 [color=blue]
	block_2c4 -> block_2c5 [color=cyan]
	block_41d -> block_430 [color=red]
	block_17e -> block_185 [color=red]
	block_17e -> block_186 [color=green]
	block_3c8 -> block_41d [color=green]
}
