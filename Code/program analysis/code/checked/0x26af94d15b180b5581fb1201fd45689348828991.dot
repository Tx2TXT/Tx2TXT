digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x60\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = CALLDATASIZE()\l6: %03 = ISZERO(%02)\l7: %04 = #0x55\la: JUMPI(%04, %03)\l"]
		block_b [label="b: %05 = #0x0\ld: %06 = CALLDATALOAD(%05)\le: %07 = #0x100000000000000000000000000000000000000000000000000000000\l2c: SWAP1(%06)\l2d: %08 = DIV(%06, %07)\l2e: %09 = #0xFFFFFFFF\l33: %0A = AND(%09, %08)\l34: %0B = DUP1(%0A)\l35: %0C = #0x1A695230\l3a: %0D = EQ(%0C, %0A)\l3b: %0E = #0x5E\l3e: JUMPI(%0E, %0D)\l"]
		block_3f [label="3f: %0F = DUP1(%0A)\l40: %10 = #0x7362377B\l45: %11 = EQ(%10, %0A)\l46: %12 = #0x8C\l49: JUMPI(%12, %11)\l"]
		block_4a [label="4a: %13 = DUP1(%0A)\l4b: %14 = #0x8DA5CB5B\l50: %15 = EQ(%14, %0A)\l51: %16 = #0xA1\l54: JUMPI(%16, %15)\l"]
		block_55 [label="55: JUMPDEST()\l56: %99 = #0x5C\l"]
		block_59 [label="59: JUMPDEST()\l"]
		block_5a [label="5a: JUMPDEST()\l5b: JUMP(%99)\l"]
		block_5c [label="5c: JUMPDEST()\l5d: STOP()\l"]
		block_5e [label="5e: JUMPDEST()\l5f: %75 = #0x8A\l62: %76 = #0x4\l64: %77 = DUP1(%76)\l65: %78 = DUP1(%76)\l66: %79 = CALLDATALOAD(%76)\l67: %7A = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l7c: %7B = AND(%7A, %79)\l7d: SWAP1(%76)\l7e: %7C = #0x20\l80: %7D = ADD(%7C, %76)\l81: SWAP1(%7B)\l82: SWAP2(%76)\l83: SWAP1(%7D)\l84: POP()\l85: POP()\l86: %7E = #0xF6\l89: JUMP(%7E)\l"]
		block_8a [label="8a: JUMPDEST()\l8b: STOP()\l"]
		block_8c [label="8c: JUMPDEST()\l8d: %37 = CALLVALUE()\l8e: %38 = ISZERO(%37)\l8f: %39 = #0x97\l92: JUMPI(%39, %38)\l"]
		block_93 [label="93: %3A = #0x0\l95: %3B = DUP1(%3A)\l96: REVERT(%3A, %3A)\l"]
		block_97 [label="97: JUMPDEST()\l98: %3C = #0x9F\l9b: %3D = #0x13A\l9e: JUMP(%3D)\l"]
		block_9f [label="9f: JUMPDEST()\la0: STOP()\l"]
		block_a1 [label="a1: JUMPDEST()\la2: %18 = CALLVALUE()\la3: %19 = ISZERO(%18)\la4: %1A = #0xAC\la7: JUMPI(%1A, %19)\l"]
		block_a8 [label="a8: %1B = #0x0\laa: %1C = DUP1(%1B)\lab: REVERT(%1B, %1B)\l"]
		block_ac [label="ac: JUMPDEST()\lad: %1D = #0xB4\lb0: %1E = #0x210\lb3: JUMP(%1E)\l"]
		block_b4 [label="b4: JUMPDEST()\lb5: %28 = #0x40\lb7: %29 = MLOAD(%28)\lb8: %2A = DUP1(%29)\lb9: %2B = DUP3(%26)\lba: %2C = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\lcf: %2D = AND(%2C, %26)\ld0: %2E = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\le5: %2F = AND(%2E, %2D)\le6: %30 = DUP2(%29)\le7: MSTORE(%29, %2F)\le8: %31 = #0x20\lea: %32 = ADD(%31, %29)\leb: SWAP2(%26)\lec: POP()\led: POP()\lee: %33 = #0x40\lf0: %34 = MLOAD(%33)\lf1: %35 = DUP1(%34)\lf2: SWAP2(%32)\lf3: %36 = SUB(%32, %34)\lf4: SWAP1(%34)\lf5: RETURN(%34, %36)\l"]
		block_f6 [label="f6: JUMPDEST()\lf7: %7F = DUP1(%7B)\lf8: %80 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l10d: %81 = AND(%80, %7B)\l10e: %82 = #0x8FC\l111: %83 = CALLVALUE()\l112: SWAP1(%82)\l113: %84 = DUP2(%83)\l114: %85 = ISZERO(%83)\l115: %86 = MUL(%85, %82)\l116: SWAP1(%83)\l117: %87 = #0x40\l119: %88 = MLOAD(%87)\l11a: %89 = #0x0\l11c: %8A = #0x40\l11e: %8B = MLOAD(%8A)\l11f: %8C = DUP1(%8B)\l120: %8D = DUP4(%88)\l121: %8E = SUB(%88, %8B)\l122: %8F = DUP2(%8B)\l123: %90 = DUP6(%83)\l124: %91 = DUP9(%81)\l125: %92 = DUP9(%86)\l126: %93 = CALL(%86, %81, %83, %8B, %8E, %8B, %89)\l127: SWAP4(%81)\l128: POP()\l129: POP()\l12a: POP()\l12b: POP()\l12c: %94 = ISZERO(%93)\l12d: %95 = ISZERO(%94)\l12e: %96 = #0x136\l131: JUMPI(%96, %95)\l"]
		block_132 [label="132: %97 = #0x0\l134: %98 = DUP1(%97)\l135: REVERT(%97, %97)\l"]
		block_136 [label="136: JUMPDEST()\l"]
		block_137 [label="137: JUMPDEST()\l138: POP()\l139: JUMP(%75)\l"]
		block_13a [label="13a: JUMPDEST()\l13b: %3E = #0x0\l13d: %3F = DUP1(%3E)\l13e: SWAP1(%3E)\l13f: %40 = SLOAD(%3E)\l140: SWAP1(%3E)\l141: %41 = #0x100\l144: %42 = EXP(%41, %3E)\l145: SWAP1(%40)\l146: %43 = DIV(%40, %42)\l147: %44 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l15c: %45 = AND(%44, %43)\l15d: %46 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l172: %47 = AND(%46, %45)\l173: %48 = CALLER()\l174: %49 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l189: %4A = AND(%49, %48)\l18a: %4B = EQ(%4A, %47)\l18b: %4C = ISZERO(%4B)\l18c: %4D = ISZERO(%4C)\l18d: %4E = #0x195\l190: JUMPI(%4E, %4D)\l"]
		block_191 [label="191: %4F = #0x0\l193: %50 = DUP1(%4F)\l194: REVERT(%4F, %4F)\l"]
		block_195 [label="195: JUMPDEST()\l196: %51 = #0x0\l198: %52 = DUP1(%51)\l199: SWAP1(%51)\l19a: %53 = SLOAD(%51)\l19b: SWAP1(%51)\l19c: %54 = #0x100\l19f: %55 = EXP(%54, %51)\l1a0: SWAP1(%53)\l1a1: %56 = DIV(%53, %55)\l1a2: %57 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1b7: %58 = AND(%57, %56)\l1b8: %59 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1cd: %5A = AND(%59, %58)\l1ce: %5B = #0x8FC\l1d1: %5C = ADDRESS()\l1d2: %5D = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1e7: %5E = AND(%5D, %5C)\l1e8: %5F = BALANCE(%5E)\l1e9: SWAP1(%5B)\l1ea: %60 = DUP2(%5F)\l1eb: %61 = ISZERO(%5F)\l1ec: %62 = MUL(%61, %5B)\l1ed: SWAP1(%5F)\l1ee: %63 = #0x40\l1f0: %64 = MLOAD(%63)\l1f1: %65 = #0x0\l1f3: %66 = #0x40\l1f5: %67 = MLOAD(%66)\l1f6: %68 = DUP1(%67)\l1f7: %69 = DUP4(%64)\l1f8: %6A = SUB(%64, %67)\l1f9: %6B = DUP2(%67)\l1fa: %6C = DUP6(%5F)\l1fb: %6D = DUP9(%5A)\l1fc: %6E = DUP9(%62)\l1fd: %6F = CALL(%62, %5A, %5F, %67, %6A, %67, %65)\l1fe: SWAP4(%5A)\l1ff: POP()\l200: POP()\l201: POP()\l202: POP()\l203: %70 = ISZERO(%6F)\l204: %71 = ISZERO(%70)\l205: %72 = #0x20D\l208: JUMPI(%72, %71)\l"]
		block_209 [label="209: %73 = #0x0\l20b: %74 = DUP1(%73)\l20c: REVERT(%73, %73)\l"]
		block_20d [label="20d: JUMPDEST()\l"]
		block_20e [label="20e: JUMPDEST()\l20f: JUMP(%3C)\l"]
		block_210 [label="210: JUMPDEST()\l211: %1F = #0x0\l213: %20 = DUP1(%1F)\l214: SWAP1(%1F)\l215: %21 = SLOAD(%1F)\l216: SWAP1(%1F)\l217: %22 = #0x100\l21a: %23 = EXP(%22, %1F)\l21b: SWAP1(%21)\l21c: %24 = DIV(%21, %23)\l21d: %25 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l232: %26 = AND(%25, %24)\l233: %27 = DUP2(%1D)\l234: JUMP(%1D)\l"]
		block_235 [label="235: [NO_SSA] STOP\l"]
	}
	block_136 -> block_137 [color=cyan]
	block_137 -> block_8a [color=blue]
	block_20e -> block_9f [color=blue]
	block_ac -> block_210 [color=blue]
	block_8c -> block_93 [color=red]
	block_13a -> block_191 [color=red]
	block_0 -> block_b [color=red]
	block_a1 -> block_a8 [color=red]
	block_13a -> block_195 [color=green]
	block_3f -> block_8c [color=green]
	block_97 -> block_13a [color=blue]
	block_195 -> block_20d [color=green]
	block_5e -> block_f6 [color=blue]
	block_f6 -> block_136 [color=green]
	block_f6 -> block_132 [color=red]
	block_b -> block_3f [color=red]
	block_59 -> block_5a [color=cyan]
	block_5a -> block_5c [color=blue]
	block_195 -> block_209 [color=red]
	block_20d -> block_20e [color=cyan]
	block_4a -> block_55 [color=red]
	block_b -> block_5e [color=green]
	block_3f -> block_4a [color=red]
	block_8c -> block_97 [color=green]
	block_210 -> block_b4 [color=blue]
	block_0 -> block_55 [color=green]
	block_4a -> block_a1 [color=green]
	block_55 -> block_59 [color=cyan]
	block_a1 -> block_ac [color=green]
}
