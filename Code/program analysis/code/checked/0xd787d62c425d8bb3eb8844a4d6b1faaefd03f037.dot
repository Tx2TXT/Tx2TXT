digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x80\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = #0x0\l7: %03 = CALLDATASIZE()\l8: %04 = #0x60\la: %05 = #0x0\lc: %06 = DUP1(%05)\ld: %07 = #0xD625EEACB9413EE671FD92A61C4FCBD8D3312B3\l22: %08 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l37: %09 = AND(%08, %07)\l38: %0A = DUP6(%02)\l39: %0B = DUP6(%03)\l3a: %0C = #0x40\l3c: %0D = MLOAD(%0C)\l3d: %0E = #0x45\l3f: SWAP3(%02)\l40: SWAP2(%03)\l41: SWAP1(%0D)\l42: %0F = #0xDC\l44: JUMP(%0F)\l"]
		block_45 [label="45: JUMPDEST()\l46: %2D = #0x0\l48: %2E = #0x40\l4a: %2F = MLOAD(%2E)\l4b: %30 = DUP1(%2F)\l4c: %31 = DUP4(%2B)\l4d: %32 = SUB(%2B, %2F)\l4e: %33 = DUP2(%2F)\l4f: %34 = DUP6(%09)\l50: %35 = GAS()\l51: %36 = DELEGATECALL(%35, %09, %2F, %32, %2F, %2D)\l52: SWAP2(%09)\l53: POP()\l54: POP()\l55: %37 = RETURNDATASIZE()\l56: %38 = DUP1(%37)\l57: %39 = #0x0\l59: %3A = DUP2(%37)\l5a: %3B = EQ(%37, %39)\l5b: %3C = #0x7E\l5d: JUMPI(%3C, %3B)\l"]
		block_5e [label="5e: %3D = #0x40\l60: %3E = MLOAD(%3D)\l61: SWAP2(%37)\l62: POP()\l63: %3F = #0x1F\l65: %40 = NOT(%3F)\l66: %41 = #0x3F\l68: %42 = RETURNDATASIZE()\l69: %43 = ADD(%42, %41)\l6a: %44 = AND(%43, %40)\l6b: %45 = DUP3(%3E)\l6c: %46 = ADD(%3E, %44)\l6d: %47 = #0x40\l6f: MSTORE(%47, %46)\l70: %48 = RETURNDATASIZE()\l71: %49 = DUP3(%3E)\l72: MSTORE(%3E, %48)\l73: %4A = RETURNDATASIZE()\l74: %4B = #0x0\l76: %4C = #0x20\l78: %4D = DUP5(%3E)\l79: %4E = ADD(%3E, %4C)\l7a: RETURNDATACOPY(%4E, %4B, %4A)\l7b: %4F = #0x83\l7d: JUMP(%4F)\l"]
		block_7e [label="7e: JUMPDEST()\l7f: %59 = #0x60\l81: SWAP2(%37)\l82: POP()\l"]
		block_83 [label="83: JUMPDEST()\l84: POP()\l85: SWAP2(%05)\l86: POP()\l87: SWAP2(%05)\l88: POP()\l89: %5A = DUP2(%36)\l8a: %5B = #0x91\l8c: JUMPI(%5B, %36)\l"]
		block_8d [label="8d: %5C = #0x0\l8f: %5D = DUP1(%5C)\l90: REVERT(%5C, %5C)\l"]
		block_91 [label="91: JUMPDEST()\l92: %5E = DUP1(%59)\l93: SWAP3(%04)\l94: POP()\l95: POP()\l96: POP()\l97: SWAP2(%02)\l98: POP()\l99: POP()\l9a: %5F = DUP1(%59)\l9b: %60 = MLOAD(%59)\l9c: SWAP1(%59)\l9d: %61 = #0x20\l9f: %62 = ADD(%61, %59)\la0: RETURN(%62, %60)\l"]
		block_a1 [label="a1: JUMPDEST()\la2: %1B = #0x0\la4: %1C = DUP2(%0D)\la5: SWAP1(%1B)\la6: POP()\la7: SWAP3(%17)\la8: SWAP2(%03)\la9: POP()\laa: POP()\lab: JUMP(%17)\l"]
		block_ac [label="ac: JUMPDEST()\lad: %22 = DUP3(%03)\lae: %23 = DUP2(%02)\laf: %24 = DUP4(%0D)\lb0: CALLDATACOPY(%0D, %02, %03)\lb1: %25 = #0x0\lb3: %26 = DUP4(%03)\lb4: %27 = DUP4(%0D)\lb5: %28 = ADD(%0D, %03)\lb6: MSTORE(%28, %25)\lb7: POP()\lb8: POP()\lb9: POP()\lba: JUMP(%1D)\l"]
		block_bb [label="bb: JUMPDEST()\lbc: %16 = #0x0\lbe: %17 = #0xC5\lc0: %18 = DUP4(%03)\lc1: %19 = DUP6(%0D)\lc2: %1A = #0xA1\lc4: JUMP(%1A)\l"]
		block_c5 [label="c5: JUMPDEST()\lc6: SWAP4(%0D)\lc7: POP()\lc8: %1D = #0xD0\lca: %1E = DUP4(%03)\lcb: %1F = DUP6(%0D)\lcc: %20 = DUP5(%02)\lcd: %21 = #0xAC\lcf: JUMP(%21)\l"]
		block_d0 [label="d0: JUMPDEST()\ld1: %29 = DUP3(%03)\ld2: %2A = DUP5(%0D)\ld3: %2B = ADD(%0D, %03)\ld4: SWAP1(%16)\ld5: POP()\ld6: SWAP4(%11)\ld7: SWAP3(%0D)\ld8: POP()\ld9: POP()\lda: POP()\ldb: JUMP(%11)\l"]
		block_dc [label="dc: JUMPDEST()\ldd: %10 = #0x0\ldf: %11 = #0xE7\le1: %12 = DUP3(%0D)\le2: %13 = DUP5(%03)\le3: %14 = DUP7(%02)\le4: %15 = #0xBB\le6: JUMP(%15)\l"]
		block_e7 [label="e7: JUMPDEST()\le8: SWAP2(%0D)\le9: POP()\lea: %2C = DUP2(%2B)\leb: SWAP1(%10)\lec: POP()\led: SWAP4(%0E)\lee: SWAP3(%02)\lef: POP()\lf0: POP()\lf1: POP()\lf2: JUMP(%0E)\l"]
		block_f3 [label="f3: [NO_SSA] INVALID\l"]
		block_f4 [label="f4: [NO_SSA] LOG2\lf5: [NO_SSA] PUSH5\lfb: [NO_SSA] INVALID\l"]
		block_fc [label="fc: [NO_SSA] SLT\lfd: [NO_SSA] SHA3\lfe: [NO_SSA] INVALID\l"]
		block_ff [label="ff: [NO_SSA] INVALID\l"]
		block_100 [label="100: [NO_SSA] RETURNDATASIZE\l101: [NO_SSA] PUSH1\l103: [NO_SSA] CALLDATALOAD\l104: [NO_SSA] PUSH25\l11e: [NO_SSA] PUSH5\l124: [NO_SSA] STOP\l"]
		block_125 [label="125: [NO_SSA] ADDMOD\l126: [NO_SSA] GT\l127: [NO_SSA] STOP\l"]
		block_128 [label="128: [NO_SSA] CALLER\l"]
	}
	block_83 -> block_8d [color=red]
	block_5e -> block_83 [color=blue]
	block_0 -> block_dc [color=blue]
	block_e7 -> block_45 [color=blue]
	block_dc -> block_bb [color=blue]
	block_d0 -> block_e7 [color=blue]
	block_45 -> block_5e [color=red]
	block_45 -> block_7e [color=green]
	block_a1 -> block_c5 [color=blue]
	block_7e -> block_83 [color=cyan]
	block_bb -> block_a1 [color=blue]
	block_83 -> block_91 [color=green]
	block_c5 -> block_ac [color=blue]
	block_ac -> block_d0 [color=blue]
}
