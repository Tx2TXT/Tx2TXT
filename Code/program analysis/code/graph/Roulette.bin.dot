digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x80\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = #0x4\l7: %03 = CALLDATASIZE()\l8: %04 = LT(%03, %02)\l9: %05 = #0x4C\lc: JUMPI(%05, %04)\l"]
		block_d [label="d: %06 = #0x0\lf: %07 = CALLDATALOAD(%06)\l10: %08 = #0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1(%07)\l2f: %09 = DIV(%07, %08)\l30: %0A = #0xFFFFFFFF\l35: %0B = AND(%0A, %09)\l36: %0C = DUP1(%0B)\l37: %0D = #0x76E06776\l3c: %0E = EQ(%0D, %0B)\l3d: %0F = #0x51\l40: JUMPI(%0F, %0E)\l"]
		block_41 [label="41: %10 = DUP1(%0B)\l42: %11 = #0xECA8BDB7\l47: %12 = EQ(%11, %0B)\l48: %13 = #0xEA\l4b: JUMPI(%13, %12)\l"]
		block_4c [label="4c: JUMPDEST()\l4d: %11E = #0x0\l4f: %11F = DUP1(%11E)\l50: REVERT(%11E, %11E)\l"]
		block_51 [label="51: JUMPDEST()\l52: %36 = CALLVALUE()\l53: %37 = DUP1(%36)\l54: %38 = ISZERO(%36)\l55: %39 = #0x5D\l58: JUMPI(%39, %38)\l"]
		block_59 [label="59: %3A = #0x0\l5b: %3B = DUP1(%3A)\l5c: REVERT(%3A, %3A)\l"]
		block_5d [label="5d: JUMPDEST()\l5e: POP()\l5f: %3C = #0xD0\l62: %3D = #0x4\l64: %3E = DUP1(%3D)\l65: %3F = CALLDATASIZE()\l66: %40 = SUB(%3F, %3D)\l67: %41 = DUP2(%3D)\l68: %42 = ADD(%3D, %40)\l69: SWAP1(%3D)\l6a: %43 = DUP1(%3D)\l6b: %44 = DUP1(%3D)\l6c: %45 = CALLDATALOAD(%3D)\l6d: %46 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l82: %47 = AND(%46, %45)\l83: SWAP1(%3D)\l84: %48 = #0x20\l86: %49 = ADD(%48, %3D)\l87: SWAP1(%47)\l88: SWAP3(%42)\l89: SWAP2(%3D)\l8a: SWAP1(%49)\l8b: %4A = DUP1(%49)\l8c: %4B = CALLDATALOAD(%49)\l8d: %4C = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\la2: %4D = AND(%4C, %4B)\la3: SWAP1(%49)\la4: %4E = #0x20\la6: %4F = ADD(%4E, %49)\la7: SWAP1(%4D)\la8: SWAP3(%42)\la9: SWAP2(%3D)\laa: SWAP1(%4F)\lab: %50 = DUP1(%4F)\lac: %51 = CALLDATALOAD(%4F)\lad: SWAP1(%4F)\lae: %52 = #0x20\lb0: %53 = ADD(%52, %4F)\lb1: SWAP1(%51)\lb2: SWAP3(%42)\lb3: SWAP2(%3D)\lb4: SWAP1(%53)\lb5: %54 = DUP1(%53)\lb6: %55 = CALLDATALOAD(%53)\lb7: SWAP1(%53)\lb8: %56 = #0x20\lba: %57 = ADD(%56, %53)\lbb: SWAP1(%55)\lbc: SWAP3(%42)\lbd: SWAP2(%3D)\lbe: SWAP1(%57)\lbf: %58 = DUP1(%57)\lc0: %59 = CALLDATALOAD(%57)\lc1: SWAP1(%57)\lc2: %5A = #0x20\lc4: %5B = ADD(%5A, %57)\lc5: SWAP1(%59)\lc6: SWAP3(%42)\lc7: SWAP2(%3D)\lc8: SWAP1(%5B)\lc9: POP()\lca: POP()\lcb: POP()\lcc: %5C = #0x141\lcf: JUMP(%5C)\l"]
		block_d0 [label="d0: JUMPDEST()\ld1: %10F = #0x40\ld3: %110 = MLOAD(%10F)\ld4: %111 = DUP1(%110)\ld5: %112 = DUP3(%10E)\ld6: %113 = ISZERO(%10E)\ld7: %114 = ISZERO(%113)\ld8: %115 = ISZERO(%114)\ld9: %116 = ISZERO(%115)\lda: %117 = DUP2(%110)\ldb: MSTORE(%110, %116)\ldc: %118 = #0x20\lde: %119 = ADD(%118, %110)\ldf: SWAP2(%10E)\le0: POP()\le1: POP()\le2: %11A = #0x40\le4: %11B = MLOAD(%11A)\le5: %11C = DUP1(%11B)\le6: SWAP2(%119)\le7: %11D = SUB(%119, %11B)\le8: SWAP1(%11B)\le9: RETURN(%11B, %11D)\l"]
		block_ea [label="ea: JUMPDEST()\leb: %16 = CALLVALUE()\lec: %17 = DUP1(%16)\led: %18 = ISZERO(%16)\lee: %19 = #0xF6\lf1: JUMPI(%19, %18)\l"]
		block_f2 [label="f2: %1A = #0x0\lf4: %1B = DUP1(%1A)\lf5: REVERT(%1A, %1A)\l"]
		block_f6 [label="f6: JUMPDEST()\lf7: POP()\lf8: %1C = #0xFF\lfb: %1D = #0x379\lfe: JUMP(%1D)\l"]
		block_ff [label="ff: JUMPDEST()\l100: %27 = #0x40\l102: %28 = MLOAD(%27)\l103: %29 = DUP1(%28)\l104: %2A = DUP3(%25)\l105: %2B = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l11a: %2C = AND(%2B, %25)\l11b: %2D = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l130: %2E = AND(%2D, %2C)\l131: %2F = DUP2(%28)\l132: MSTORE(%28, %2E)\l133: %30 = #0x20\l135: %31 = ADD(%30, %28)\l136: SWAP2(%25)\l137: POP()\l138: POP()\l139: %32 = #0x40\l13b: %33 = MLOAD(%32)\l13c: %34 = DUP1(%33)\l13d: SWAP2(%31)\l13e: %35 = SUB(%31, %33)\l13f: SWAP1(%33)\l140: RETURN(%33, %35)\l"]
		block_141 [label="141: JUMPDEST()\l142: %5D = #0x0\l144: %5E = DUP1(%5D)\l145: %5F = #0x0\l147: %60 = DUP1(%5F)\l148: %61 = DUP6(%55)\l149: SWAP3(%5D)\l14a: POP()\l14b: %62 = DUP6(%55)\l14c: %63 = TIMESTAMP()\l14d: %64 = DUP9(%51)\l14e: %65 = SUB(%51, %63)\l14f: %66 = ADD(%65, %55)\l150: SWAP2(%5F)\l151: POP()\l152: %67 = DUP3(%55)\l153: %68 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l168: %69 = AND(%68, %55)\l169: %6A = #0x23B872DD\l16e: %6B = DUP11(%47)\l16f: %6C = DUP11(%4D)\l170: %6D = DUP6(%66)\l171: %6E = #0x40\l173: %6F = MLOAD(%6E)\l174: %70 = DUP5(%6A)\l175: %71 = #0xFFFFFFFF\l17a: %72 = AND(%71, %6A)\l17b: %73 = #0x100000000000000000000000000000000000000000000000000000000\l199: %74 = MUL(%73, %72)\l19a: %75 = DUP2(%6F)\l19b: MSTORE(%6F, %74)\l19c: %76 = #0x4\l19e: %77 = ADD(%76, %6F)\l19f: %78 = DUP1(%77)\l1a0: %79 = DUP5(%47)\l1a1: %7A = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1b6: %7B = AND(%7A, %47)\l1b7: %7C = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1cc: %7D = AND(%7C, %7B)\l1cd: %7E = DUP2(%77)\l1ce: MSTORE(%77, %7D)\l1cf: %7F = #0x20\l1d1: %80 = ADD(%7F, %77)\l1d2: %81 = DUP4(%4D)\l1d3: %82 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1e8: %83 = AND(%82, %4D)\l1e9: %84 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l1fe: %85 = AND(%84, %83)\l1ff: %86 = DUP2(%80)\l200: MSTORE(%80, %85)\l201: %87 = #0x20\l203: %88 = ADD(%87, %80)\l204: %89 = DUP3(%66)\l205: %8A = DUP2(%88)\l206: MSTORE(%88, %66)\l207: %8B = #0x20\l209: %8C = ADD(%8B, %88)\l20a: SWAP4(%47)\l20b: POP()\l20c: POP()\l20d: POP()\l20e: POP()\l20f: %8D = #0x20\l211: %8E = #0x40\l213: %8F = MLOAD(%8E)\l214: %90 = DUP1(%8F)\l215: %91 = DUP4(%8C)\l216: %92 = SUB(%8C, %8F)\l217: %93 = DUP2(%8F)\l218: %94 = #0x0\l21a: %95 = DUP8(%69)\l21b: %96 = DUP1(%69)\l21c: %97 = EXTCODESIZE(%69)\l21d: %98 = ISZERO(%97)\l21e: %99 = DUP1(%98)\l21f: %9A = ISZERO(%98)\l220: %9B = #0x228\l223: JUMPI(%9B, %9A)\l"]
		block_224 [label="224: %9C = #0x0\l226: %9D = DUP1(%9C)\l227: REVERT(%9C, %9C)\l"]
		block_228 [label="228: JUMPDEST()\l229: POP()\l22a: %9E = GAS()\l22b: %9F = CALL(%9E, %69, %94, %8F, %92, %8F, %8D)\l22c: %A0 = ISZERO(%9F)\l22d: %A1 = DUP1(%A0)\l22e: %A2 = ISZERO(%A0)\l22f: %A3 = #0x23C\l232: JUMPI(%A3, %A2)\l"]
		block_233 [label="233: %A4 = RETURNDATASIZE()\l234: %A5 = #0x0\l236: %A6 = DUP1(%A5)\l237: RETURNDATACOPY(%A5, %A5, %A4)\l238: %A7 = RETURNDATASIZE()\l239: %A8 = #0x0\l23b: REVERT(%A8, %A7)\l"]
		block_23c [label="23c: JUMPDEST()\l23d: POP()\l23e: POP()\l23f: POP()\l240: POP()\l241: %A9 = #0x40\l243: %AA = MLOAD(%A9)\l244: %AB = RETURNDATASIZE()\l245: %AC = #0x20\l247: %AD = DUP2(%AB)\l248: %AE = LT(%AB, %AC)\l249: %AF = ISZERO(%AE)\l24a: %B0 = #0x252\l24d: JUMPI(%B0, %AF)\l"]
		block_24e [label="24e: %B1 = #0x0\l250: %B2 = DUP1(%B1)\l251: REVERT(%B1, %B1)\l"]
		block_252 [label="252: JUMPDEST()\l253: %B3 = DUP2(%AA)\l254: %B4 = ADD(%AA, %AB)\l255: SWAP1(%AA)\l256: %B5 = DUP1(%AA)\l257: %B6 = DUP1(%AA)\l258: %B7 = MLOAD(%AA)\l259: SWAP1(%AA)\l25a: %B8 = #0x20\l25c: %B9 = ADD(%B8, %AA)\l25d: SWAP1(%B7)\l25e: SWAP3(%B4)\l25f: SWAP2(%AA)\l260: SWAP1(%B9)\l261: POP()\l262: POP()\l263: POP()\l264: POP()\l265: %BA = DUP5(%59)\l266: %BB = DUP3(%66)\l267: %BC = ADD(%66, %59)\l268: SWAP1(%5F)\l269: POP()\l26a: %BD = DUP3(%55)\l26b: %BE = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l280: %BF = AND(%BE, %55)\l281: %C0 = #0xA9059CBB\l286: %C1 = #0x0\l288: %C2 = DUP1(%C1)\l289: SWAP1(%C1)\l28a: %C3 = SLOAD(%C1)\l28b: SWAP1(%C1)\l28c: %C4 = #0x100\l28f: %C5 = EXP(%C4, %C1)\l290: SWAP1(%C3)\l291: %C6 = DIV(%C3, %C5)\l292: %C7 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l2a7: %C8 = AND(%C7, %C6)\l2a8: %C9 = DUP4(%BC)\l2a9: %CA = #0x40\l2ab: %CB = MLOAD(%CA)\l2ac: %CC = DUP4(%C0)\l2ad: %CD = #0xFFFFFFFF\l2b2: %CE = AND(%CD, %C0)\l2b3: %CF = #0x100000000000000000000000000000000000000000000000000000000\l2d1: %D0 = MUL(%CF, %CE)\l2d2: %D1 = DUP2(%CB)\l2d3: MSTORE(%CB, %D0)\l2d4: %D2 = #0x4\l2d6: %D3 = ADD(%D2, %CB)\l2d7: %D4 = DUP1(%D3)\l2d8: %D5 = DUP4(%C8)\l2d9: %D6 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l2ee: %D7 = AND(%D6, %C8)\l2ef: %D8 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l304: %D9 = AND(%D8, %D7)\l305: %DA = DUP2(%D3)\l306: MSTORE(%D3, %D9)\l307: %DB = #0x20\l309: %DC = ADD(%DB, %D3)\l30a: %DD = DUP3(%BC)\l30b: %DE = DUP2(%DC)\l30c: MSTORE(%DC, %BC)\l30d: %DF = #0x20\l30f: %E0 = ADD(%DF, %DC)\l310: SWAP3(%C8)\l311: POP()\l312: POP()\l313: POP()\l314: %E1 = #0x20\l316: %E2 = #0x40\l318: %E3 = MLOAD(%E2)\l319: %E4 = DUP1(%E3)\l31a: %E5 = DUP4(%E0)\l31b: %E6 = SUB(%E0, %E3)\l31c: %E7 = DUP2(%E3)\l31d: %E8 = #0x0\l31f: %E9 = DUP8(%BF)\l320: %EA = DUP1(%BF)\l321: %EB = EXTCODESIZE(%BF)\l322: %EC = ISZERO(%EB)\l323: %ED = DUP1(%EC)\l324: %EE = ISZERO(%EC)\l325: %EF = #0x32D\l328: JUMPI(%EF, %EE)\l"]
		block_329 [label="329: %F0 = #0x0\l32b: %F1 = DUP1(%F0)\l32c: REVERT(%F0, %F0)\l"]
		block_32d [label="32d: JUMPDEST()\l32e: POP()\l32f: %F2 = GAS()\l330: %F3 = CALL(%F2, %BF, %E8, %E3, %E6, %E3, %E1)\l331: %F4 = ISZERO(%F3)\l332: %F5 = DUP1(%F4)\l333: %F6 = ISZERO(%F4)\l334: %F7 = #0x341\l337: JUMPI(%F7, %F6)\l"]
		block_338 [label="338: %F8 = RETURNDATASIZE()\l339: %F9 = #0x0\l33b: %FA = DUP1(%F9)\l33c: RETURNDATACOPY(%F9, %F9, %F8)\l33d: %FB = RETURNDATASIZE()\l33e: %FC = #0x0\l340: REVERT(%FC, %FB)\l"]
		block_341 [label="341: JUMPDEST()\l342: POP()\l343: POP()\l344: POP()\l345: POP()\l346: %FD = #0x40\l348: %FE = MLOAD(%FD)\l349: %FF = RETURNDATASIZE()\l34a: %100 = #0x20\l34c: %101 = DUP2(%FF)\l34d: %102 = LT(%FF, %100)\l34e: %103 = ISZERO(%102)\l34f: %104 = #0x357\l352: JUMPI(%104, %103)\l"]
		block_353 [label="353: %105 = #0x0\l355: %106 = DUP1(%105)\l356: REVERT(%105, %105)\l"]
		block_357 [label="357: JUMPDEST()\l358: %107 = DUP2(%FE)\l359: %108 = ADD(%FE, %FF)\l35a: SWAP1(%FE)\l35b: %109 = DUP1(%FE)\l35c: %10A = DUP1(%FE)\l35d: %10B = MLOAD(%FE)\l35e: SWAP1(%FE)\l35f: %10C = #0x20\l361: %10D = ADD(%10C, %FE)\l362: SWAP1(%10B)\l363: SWAP3(%108)\l364: SWAP2(%FE)\l365: SWAP1(%10D)\l366: POP()\l367: POP()\l368: POP()\l369: POP()\l36a: %10E = #0x1\l36c: SWAP4(%5D)\l36d: POP()\l36e: POP()\l36f: POP()\l370: POP()\l371: SWAP6(%3C)\l372: SWAP5(%47)\l373: POP()\l374: POP()\l375: POP()\l376: POP()\l377: POP()\l378: JUMP(%3C)\l"]
		block_379 [label="379: JUMPDEST()\l37a: %1E = #0x0\l37c: %1F = DUP1(%1E)\l37d: SWAP1(%1E)\l37e: %20 = SLOAD(%1E)\l37f: SWAP1(%1E)\l380: %21 = #0x100\l383: %22 = EXP(%21, %1E)\l384: SWAP1(%20)\l385: %23 = DIV(%20, %22)\l386: %24 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l39b: %25 = AND(%24, %23)\l39c: %26 = DUP2(%1C)\l39d: JUMP(%1C)\l"]
		block_39e [label="39e: [NO_SSA] STOP\l"]
	}
	block_d -> block_51 [color=green]
	block_379 -> block_ff [color=blue]
	block_23c -> block_252 [color=green]
	block_252 -> block_329 [color=red]
	block_51 -> block_5d [color=green]
	block_41 -> block_ea [color=green]
	block_32d -> block_338 [color=red]
	block_5d -> block_141 [color=blue]
	block_23c -> block_24e [color=red]
	block_ea -> block_f2 [color=red]
	block_51 -> block_59 [color=red]
	block_228 -> block_23c [color=green]
	block_357 -> block_d0 [color=blue]
	block_f6 -> block_379 [color=blue]
	block_0 -> block_d [color=red]
	block_0 -> block_4c [color=green]
	block_141 -> block_228 [color=green]
	block_141 -> block_224 [color=red]
	block_341 -> block_353 [color=red]
	block_252 -> block_32d [color=green]
	block_32d -> block_341 [color=green]
	block_228 -> block_233 [color=red]
	block_341 -> block_357 [color=green]
	block_41 -> block_4c [color=red]
	block_ea -> block_f6 [color=green]
	block_d -> block_41 [color=red]
}
