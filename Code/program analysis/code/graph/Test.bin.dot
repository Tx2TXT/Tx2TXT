digraph "graph.cfg.gv" {
	subgraph global {
		node [fontname=Courier fontsize=30.0 rank=same shape=box]
		block_0 [label="0: %00 = #0x80\l2: %01 = #0x40\l4: MSTORE(%01, %00)\l5: %02 = #0x4\l7: %03 = CALLDATASIZE()\l8: %04 = LT(%03, %02)\l9: %05 = #0x41\lc: JUMPI(%05, %04)\l"]
		block_d [label="d: %06 = #0x0\lf: %07 = CALLDATALOAD(%06)\l10: %08 = #0x100000000000000000000000000000000000000000000000000000000\l2e: SWAP1(%07)\l2f: %09 = DIV(%07, %08)\l30: %0A = #0xFFFFFFFF\l35: %0B = AND(%0A, %09)\l36: %0C = DUP1(%0B)\l37: %0D = #0x58D02B09\l3c: %0E = EQ(%0D, %0B)\l3d: %0F = #0xE5\l40: JUMPI(%0F, %0E)\l"]
		block_41 [label="41: JUMPDEST()\l42: %67 = #0x8AC7230489E80000\l4b: %68 = CALLVALUE()\l4c: %69 = EQ(%68, %67)\l4d: %6A = ISZERO(%69)\l4e: %6B = ISZERO(%6A)\l4f: %6C = #0x57\l52: JUMPI(%6C, %6B)\l"]
		block_53 [label="53: %6D = #0x0\l55: %6E = DUP1(%6D)\l56: REVERT(%6D, %6D)\l"]
		block_57 [label="57: JUMPDEST()\l58: %6F = #0x0\l5a: %70 = SLOAD(%6F)\l5b: %71 = TIMESTAMP()\l5c: %72 = EQ(%71, %70)\l5d: %73 = ISZERO(%72)\l5e: %74 = ISZERO(%73)\l5f: %75 = ISZERO(%74)\l60: %76 = #0x68\l63: JUMPI(%76, %75)\l"]
		block_64 [label="64: %77 = #0x0\l66: %78 = DUP1(%77)\l67: REVERT(%77, %77)\l"]
		block_68 [label="68: JUMPDEST()\l69: %79 = TIMESTAMP()\l6a: %7A = #0x0\l6c: %7B = DUP2(%79)\l6d: SWAP1(%7A)\l6e: SSTORE(%7A, %79)\l6f: POP()\l70: %7C = #0x0\l72: %7D = #0xF\l74: %7E = TIMESTAMP()\l75: %7F = DUP2(%7D)\l76: %80 = ISZERO(%7D)\l77: %81 = ISZERO(%80)\l78: %82 = #0x7D\l7b: JUMPI(%82, %81)\l"]
		block_7c [label="7c: INVALID()\l"]
		block_7d [label="7d: JUMPDEST()\l7e: %83 = MOD(%7E, %7D)\l7f: %84 = EQ(%83, %7C)\l80: %85 = ISZERO(%84)\l81: %86 = #0xE3\l84: JUMPI(%86, %85)\l"]
		block_85 [label="85: %87 = CALLER()\l86: %88 = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\l9b: %89 = AND(%88, %87)\l9c: %8A = #0x8FC\l9f: %8B = ADDRESS()\la0: %8C = #0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\lb5: %8D = AND(%8C, %8B)\lb6: %8E = BALANCE(%8D)\lb7: SWAP1(%8A)\lb8: %8F = DUP2(%8E)\lb9: %90 = ISZERO(%8E)\lba: %91 = MUL(%90, %8A)\lbb: SWAP1(%8E)\lbc: %92 = #0x40\lbe: %93 = MLOAD(%92)\lbf: %94 = #0x0\lc1: %95 = #0x40\lc3: %96 = MLOAD(%95)\lc4: %97 = DUP1(%96)\lc5: %98 = DUP4(%93)\lc6: %99 = SUB(%93, %96)\lc7: %9A = DUP2(%96)\lc8: %9B = DUP6(%8E)\lc9: %9C = DUP9(%89)\lca: %9D = DUP9(%91)\lcb: %9E = CALL(%91, %89, %8E, %96, %99, %96, %94)\lcc: SWAP4(%89)\lcd: POP()\lce: POP()\lcf: POP()\ld0: POP()\ld1: %9F = ISZERO(%9E)\ld2: %A0 = DUP1(%9F)\ld3: %A1 = ISZERO(%9F)\ld4: %A2 = #0xE1\ld7: JUMPI(%A2, %A1)\l"]
		block_d8 [label="d8: %A3 = RETURNDATASIZE()\ld9: %A4 = #0x0\ldb: %A5 = DUP1(%A4)\ldc: RETURNDATACOPY(%A4, %A4, %A3)\ldd: %A6 = RETURNDATASIZE()\lde: %A7 = #0x0\le0: REVERT(%A7, %A6)\l"]
		block_e1 [label="e1: JUMPDEST()\le2: POP()\l"]
		block_e3 [label="e3: JUMPDEST()\le4: STOP()\l"]
		block_e5 [label="e5: JUMPDEST()\le6: %51 = CALLVALUE()\le7: %52 = DUP1(%51)\le8: %53 = ISZERO(%51)\le9: %54 = #0xF1\lec: JUMPI(%54, %53)\l"]
		block_ed [label="ed: %55 = #0x0\lef: %56 = DUP1(%55)\lf0: REVERT(%55, %55)\l"]
		block_f1 [label="f1: JUMPDEST()\lf2: POP()\lf3: %57 = #0xFA\lf6: %58 = #0x110\lf9: JUMP(%58)\l"]
		block_fa [label="fa: JUMPDEST()\lfb: %5C = #0x40\lfd: %5D = MLOAD(%5C)\lfe: %5E = DUP1(%5D)\lff: %5F = DUP3(%5A)\l100: %60 = DUP2(%5D)\l101: MSTORE(%5D, %5A)\l102: %61 = #0x20\l104: %62 = ADD(%61, %5D)\l105: SWAP2(%5A)\l106: POP()\l107: POP()\l108: %63 = #0x40\l10a: %64 = MLOAD(%63)\l10b: %65 = DUP1(%64)\l10c: SWAP2(%62)\l10d: %66 = SUB(%62, %64)\l10e: SWAP1(%64)\l10f: RETURN(%64, %66)\l"]
		block_110 [label="110: JUMPDEST()\l111: %59 = #0x0\l113: %5A = SLOAD(%59)\l114: %5B = DUP2(%57)\l115: JUMP(%57)\l"]
		block_116 [label="116: [NO_SSA] STOP\l"]
	}
	block_7d -> block_e3 [color=green]
	block_f1 -> block_110 [color=blue]
	block_41 -> block_53 [color=red]
	block_57 -> block_64 [color=red]
	block_e5 -> block_ed [color=red]
	block_85 -> block_e1 [color=green]
	block_e5 -> block_f1 [color=green]
	block_0 -> block_d [color=red]
	block_85 -> block_d8 [color=red]
	block_110 -> block_fa [color=blue]
	block_d -> block_e5 [color=green]
	block_d -> block_41 [color=red]
	block_e1 -> block_e3 [color=cyan]
	block_68 -> block_7d [color=green]
	block_0 -> block_41 [color=green]
	block_7d -> block_85 [color=red]
	block_57 -> block_68 [color=green]
	block_41 -> block_57 [color=green]
	block_68 -> block_7c [color=red]
}
